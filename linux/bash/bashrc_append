# shellcheck shell=bash

set -o noclobber

alias ..='cd ..'
alias ...='cd ../..'
alias -- -='cd -'
function h {
    f "$HOME/$1"
}
alias pu='pushd'
alias po='popd'

alias md='mkdir'

alias crontab='crontab -i'
alias grep='grep -i'

alias apt-up='sudo apt update && sudo apt upgrade && sudo apt autoremove'

# find external IP. pass -4 or -6 to specify v4/v6 address.
alias myip='curl -s -w "\n" http://ip.dzdz.cz'

if which op >/dev/null; then
    alias 1p='eval $(op signin)'
fi

function dates() {
    echo "
Format/result                   |       Command           |          Output
--------------------------------+-------------------------+----------------------------
YYYY-MM-DD_hh:mm:ss             | date +%F_%T             | $(date +%F_%T)
YYYYMMDD_hhmmss                 | date +%Y%m%d_%H%M%S     | $(date +%Y%m%d_%H%M%S)
YYYYMMDD_hhmmss (UTC version)   | date -u +%Y%m%d_%H%M%SZ | $(date -u +%Y%m%d_%H%M%SZ)
YYYYMMDD_hhmmss (with local TZ) | date +%Y%m%d_%H%M%S%Z   | $(date +%Y%m%d_%H%M%S%Z)
YYYYMMSShhmmss                  | date +%Y%m%d%H%M%S      | $(date +%Y%m%d%H%M%S)
YYYYMMSShhmmssnnnnnnnnn         | date +%Y%m%d%H%M%S%N    | $(date +%Y%m%d%H%M%S%N)
YYMMDD_hhmmss                   | date +%y%m%d_%H%M%S     | $(date +%y%m%d_%H%M%S)
Seconds since UNIX epoch:       | date +%s                | $(date +%s)
Nanoseconds only:               | gdate +%N               | $(gdate +%N)
Nanoseconds since UNIX epoch:   | gdate +%s%N             | $(gdate +%s%N)
ISO8601 UTC timestamp           | date -u +%FT%TZ         | $(date -u +%FT%TZ)
ISO8601 UTC timestamp + ms      | date -u +%FT%T.%3NZ     | $(date -u +%FT%T.%3NZ)
ISO8601 Local TZ timestamp      | date +%FT%T%Z           | $(date +%FT%T%Z)
YYYY-MM-DD (Short day)          | date +%F\(%a\)          | $(date +%F\(%a\))
YYYY-MM-DD (Long day)           | date +%F\(%A\)          | $(date +%F\(%A\))
"
}

function rm-known-host() {
    if [ -z "$1" ]; then
        echo "usage: rm-known-host LINE_NUMBER"
        return 1
    fi
    re='^[0-9]+$'
    if ! [[ "$1" =~ $re ]] ; then
        echo "usage: rm-known-host LINE_NUMBER"
        return 1
    fi
    sed -i "$1d" "$HOME/.ssh/known_hosts"
}

# better cp based on rsync:
# https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/cp/cp.plugin.zsh
cpv() {
    rsync -pogbr -hhh --backup-dir="/tmp/rsync-${USER}" -e /dev/null --progress "$@"
}

f() {
	cd "$1"
	ls
}
