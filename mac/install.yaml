checklist: $HOME/SystemSetup.md

install_groups:
  - group: Core
    optional: false
    software:

      - artifact: $BREW/bin/git
        install:
          - brew: git
        checklist:
          - Configure your Git user name and email
          - Set up SSH keys for GitHub/GitLab

      - artifact: $BREW/bin/go
        install:
          - brew: go
        checklist:
          - Set GOPRIVATE as needed via go env -w GOPRIVATE=host.com/org

      - artifact: $BREW/bin/node
        install:
          - brew: node

      - artifact: $BREW/bin/rustc
        install:
          - brew: rust

      - artifact: ~/.bun/bin/bun
        install:
          - run: "curl -fsSL https://bun.sh/install | bash"

      - artifact: $BREW/bin/python3
        install:
          - brew: python

      - artifact: $BREW/bin/uv
        install:
          - brew: uv

      - artifact: /usr/local/bin/utiluti
        install:
          - script: install/utiluti.sh

      - artifact: $BREW/bin/ag
        install:
          - brew: ag

      - artifact: $BREW/etc/bash_completion
        install:
          - brew: bash-completion

      - artifact: $BREW/bin/b2
        install:
          - brew: b2-tools

      - artifact: $BREW/bin/bandwhich
        install:
          - brew: bandwhich

      - artifact: $BREW/bin/bat
        install:
          - brew: bat

      - artifact: $BREW/bin/bluetoothconnector
        install:
          - brew: bluetoothconnector

      - artifact: $BREW/bin/cidrtool
        install:
          - brew: cdzombak/oss/cidrtool

      - artifact: $BREW/opt/coreutils/libexec/gnubin
        install:
          - brew: coreutils

      - artifact: $BREW/bin/ggrep
        install:
          - brew: grep

      - artifact: $BREW/opt/curl/bin/curl
        install:
          - brew: curl

      - artifact: $BREW/bin/diff-so-fancy
        install:
          - brew: diff-so-fancy

      - artifact: $BREW/bin/ddgr
        install:
          - brew: ddgr

      - artifact: $BREW/bin/duf
        install:
          - brew: duf

      - artifact: $BREW/bin/dust
        install:
          - brew: dust

      - artifact: $BREW/bin/duti
        install:
          - brew: duti

      - artifact: $BREW/bin/fileicon
        install:
          - brew: fileicon

      - artifact: $BREW/bin/fzf
        install:
          - brew: fzf

      - artifact: $BREW/bin/gron
        install:
          - brew: gron

      - artifact: $BREW/bin/git-lfs
        install:
          - brew: git-lfs
        configure:
          - run: sudo git lfs install --system --skip-repo

      - artifact: $BREW/bin/gtar
        install:
          - brew: gnu-tar

      - artifact: $BREW/bin/htop
        install:
          - brew: htop

      - artifact: $BREW/bin/imagesnap
        install:
          - brew: imagesnap

      - artifact: $BREW/bin/jsonnet-lint
        install:
          - brew: go-jsonnet

      - artifact: $BREW/bin/jq
        install:
          - brew: jq

      - artifact: $BREW/bin/listening
        install:
          - brew: cdzombak/oss/listening

      - artifact: $BREW/bin/lua
        install:
          - brew: lua

      - artifact: $BREW/bin/mdcat
        install:
          - brew: mdcat

      - artifact: $BREW/bin/mdless
        install:
          - brew: mdless

      - artifact: $BREW/bin/mogrify
        install:
          - brew: imagemagick

      - artifact: $BREW/bin/nano
        install:
          - brew: nano

      - artifact: $BREW/bin/ncdu
        install:
          - brew: ncdu

      - artifact: $BREW/bin/nnn
        install:
          - brew: nnn

      - artifact: $BREW/bin/ocr
        install:
          - brew: schappim/ocr/ocr

      - artifact: $BREW/bin/parallel
        install:
          - brew: parallel
        configure:
          - run: mkdir -p "$HOME/.parallel" && touch "$HOME/.parallel/will-cite"

      - artifact: $BREW/bin/pdate
        install:
          - brew: cdzombak/oss/pdate

      - artifact: $BREW/bin/pdffonts
        install:
          - brew: poppler

      - artifact: $BREW/bin/pngcrush
        install:
          - brew: pngcrush

      - artifact: $BREW/bin/prettierd
        install:
          - brew: fsouza/prettierd/prettierd

      - artifact: $BREW/bin/pup
        install:
          - brew: pup

      - artifact: /Applications/QuickLook Video.app
        install:
          - cask: qlvideo

      - artifact: $BREW/bin/rdfind
        install:
          - brew: rdfind

      - artifact: $BREW/bin/screen
        install:
          - brew: screen

      - artifact: $BREW/bin/shellcheck
        install:
          - brew: shellcheck

      - artifact: $BREW/bin/shfmt
        install:
          - brew: shfmt

      - artifact: $BREW/opt/sqlite/bin/sqlite3
        install:
          - brew: sqlite

      - artifact: $BREW/bin/stow
        install:
          - brew: stow

      - artifact: $BREW/bin/syncthing
        install:
          - brew: syncthing
        configure:
          - run: brew services start syncthing
        checklist:
          - Configure Syncthing via web interface at http://localhost:8384

      - artifact: $BREW/bin/task
        install:
          - brew: go-task/tap/go-task

      - artifact: $BREW/bin/terminal-notifier
        install:
          - brew: terminal-notifier

      - artifact: $BREW/bin/tig
        install:
          - brew: tig

      - artifact: $BREW/bin/todos
        install:
          - brew: tofrodos

      - artifact: $BREW/bin/tree
        install:
          - brew: tree

      - artifact: $BREW/bin/trash
        install:
          - brew: trash

      - artifact: $BREW/bin/unshorten
        install:
          - brew: cdzombak/oss/unshorten

      - artifact: $BREW/bin/wget
        install:
          - brew: wget

      - artifact: $BREW/bin/windowstack2
        install:
          - brew: cdzombak/oss/windowstack2

      - artifact: $BREW/bin/xz
        install:
          - brew: xz

      - artifact: $BREW/bin/yamllint
        install:
          - brew: yamllint

      - artifact: $BREW/bin/yq
        install:
          - brew: python-yq

      - artifact: $BREW/bin/markdown-toc
        install:
          - npm: markdown-toc

      - artifact: $BREW/bin/bundler
        install:
          - gem: bundler

      - artifact: $BREW/bin/fpm
        install:
          - gem: fpm

      - artifact: $BREW/bin/rubocop
        install:
          - gem: rubocop

      - artifact: $BREW/bin/plistwatch
        install:
          - run: brew gomod github.com/catilac/plistwatch

      - artifact: $BREW/bin/tldr
        install:
          - brew: tealdeer
        configure:
          - run: tldr --update

      - artifact: $BREW/bin/mdless
        install:
          - gem: mdless

      - artifact: $BREW/bin/envsubst
        install:
          - brew: gettext
        configure:
          - run: brew link --force gettext

      - artifact: /usr/local/bin/metar
        install:
          - script: install/metar.sh

      - artifact: $BREW/bin/mac-cleanup
        install:
          - run: brew tap mac-cleanup/mac-cleanup-py ; brew install mac-cleanup-py

      - artifact: /Applications/Sublime Text.app
        install:
          - script: install/sublime-text.sh
        checklist:
          - Open the application and allow Package Control to finish installing packages as configured
          - License

      - artifact: "$HOME/.config/sublimetext"
        install:
          - run: ln -s "$HOME/Library/Application Support/Sublime Text 3/Packages/User" "$HOME/.config/sublimetext"

      - artifact: /Applications/Suspicious Package.app
        install:
          - cask: suspicious-package

      - artifact: /Applications/WhatsYourSign.app
        install:
          - cask: whatsyoursign

      - artifact: /Applications/Marked 2.app
        install:
          - cask: marked
        configure:
          - run: defaults write com.brettterpstra.marked2 WebKitDeveloperExtras -bool true
          - run: defaults write com.brettterpstra.marked2 convertGithubCheckboxes -bool true
          - run: defaults write com.brettterpstra.marked2 defaultProcessor -string "Discount (GFM)"
          - run: defaults write com.brettterpstra.marked2 defaultSyntaxStyle -string "GitHub"
          - run: defaults write com.brettterpstra.marked2 externalEditor -string "Typora"
          - run: defaults write com.brettterpstra.marked2 externalImageEditor -string "Pixelmator"
          - run: defaults write com.brettterpstra.marked2 includeMathJax -bool true
          - run: defaults write com.brettterpstra.marked2 isMultiMarkdownDefault -bool false
          - run: defaults write com.brettterpstra.marked2 syntaxHighlight -bool true
        checklist:
          - License
          - Install Custom CSS from ~/.config/macos

      - artifact: /Applications/KeyCastr.app
        install:
          - cask: keycastr
        configure:
          - run: defaults write "io.github.keycastr" "default.fontSize" '"61.50496794871795"'
          - run: defaults write "io.github.keycastr" "default.commandKeysOnly" '1'
          - run: defaults write "io.github.keycastr" "selectedVisualizer" 'Default'
          - run: defaults write "io.github.keycastr" "default.fadeDelay" '"1.646634615384615"'
        checklist:
          - Set bezel to 70% opacity (from default 80)
          - Hide in Dock; show only in menu bar

      - artifact: /Applications/ThingsMacSandboxHelper.app
        install:
          - cask: thingsmacsandboxhelper

      - artifact: $HOME/Library/Fonts/MesloLGL-Regular.ttf
        install:
          - archive: https://dropbox.dzombak.com/Meslo_LG_v1.2.5.zip

      - artifact: $HOME/Library/Fonts/MesloLGLDZ-Regular.ttf
        install:
          - archive: https://dropbox.dzombak.com/Meslo_LG_DZ_v1.2.5.zip

      - artifact: /usr/local/bin/hosts-timer
        install:
          - script: install/hosts-timer.sh

      # mirrored from https://github.com/ponychicken/WebsterParser/releases/tag/0.0.2
      # See: http://jsomers.net/blog/dictionary
      - artifact: "$HOME/Library/Dictionaries/Webster’s 1913.dictionary"
        install:
          - archive: https://dropbox.dzombak.com/websters-1913/Webster.s.1913.dictionary.zip
            file: "Webster’s 1913.dictionary"
        checklist:
          - Arrange/enable dictionaries in Dictionary.app as desired

      - artifact: /Applications/Ears.app
        install:
          - archive: https://download.retina.studio/ears/v1/
            file: "Ears.app"
        checklist:
          - License Ears
          - "Configure: Start at Login; Key combo Ctrl-Shift-E; Notify about audio device changes; Show in Menu Bar"
          - "Favorite devices: AirPods Pro and Sony ANC Phones"
          - "Linked devices: AirPods Pro/Webcam Mic, Sony ANC Phones/Webcam Mic, AirPods Pro/Lavalier Mic, Sony ANC Phones/Lavalier Mic"
          - "Notifications: banners, show on lock screen, hide in Notification Center, show previews always"

      - artifact: $HOME/Library/Sounds/Honk.aiff
        install:
          - dl: https://dropbox.dzombak.com/Honk.aiff

      - artifact: /usr/local/bin/diskspace
        note: reports the various free space measurements possible on APFS
        install:
          - script: install/diskspace.sh

      - artifact: /Applications/Red Eye.app
        install:
          - run: echo "(manual install required)"
        checklist:
          - Install Red Eye.app from iCloud Drive/Software folder

      - artifact: /Applications/1Password.app
        install:
          - cask: 1password
        checklist:
          - "Sign in to accounts: personal; work as needed"
          - "Do not show in menu bar"
          - "Start at login"
          - "No keyboard shortcut for: Quick Access; Lock 1Password"
          - "Show 1Password: Ctrl-Shift-Command-Backslash"
          - "Autofill: Command-Backslash"
          - "Appearance -> Density: Compact"
          - "Appearance -> Always show in Sidebar: Categories and Tags"
          - "Security: enable unlock with Apple Watch"
          - "Security: hold Option to toggle revealed fields"
          - "Privacy -> Watchtower: Enable all Watchtower features"
          - "Developer: enable CLI integration"

      - artifact: $BREW/bin/op
        install:
          - cask: 1password-cli

      - artifact: /Applications/Alfred 5.app
        install:
          - cask: alfred
        checklist:
          - Launch & walk through setup
          - Disable Spotlight keyboard shortcut
          - Use ⌘+Space for Alfred
          - Sync settings from ~/.config/macos
          - Enable automatic snippet expansion
          - Enable browser bookmarks
          - Change theme
          - Sweep through synced workflows, fixing as needed

      - artifact: /Applications/AppCleaner.app
        install:
          - cask: appcleaner
        configure:
          - run: defaults write net.freemacsoft.AppCleaner SUEnableAutomaticChecks -bool true
        checklist:
          - Enable SmartDelete (automatic watching for deleted apps)
          - Enable automatic updates
          - Allow Full Disk Access

      - artifact: /Applications/Arq.app
        install:
          - cask: arq
        checklist:
          - Setup onsite backups as desired
          - Setup offsite backups as desired
          - Setup emails via Mailgun
          - Pause backups on battery power
          - Enable backup thinning

      - artifact: /Applications/Choosy.app
        install:
          - cask: choosy
        configure:
          - run: defaults write com.choosyosx.Choosy generalMode 0
          - run: defaults write com.choosyosx.Choosy launchAtLogin -bool true
          - run: defaults write com.choosyosx.Choosy runningMode 3
          - run: defaults write com.choosyosx.Choosy displayBrowserNames 0
        checklist:
          - License Choosy
          - Enable Choosy & Start at Login
          - Set as default browser
          - Configure Choosy/Import and Tweak Choosy Config

      - artifact: /Applications/CommandQ.app
        install:
          - cask: commandq
        configure:
          - run: defaults write com.commandqapp.CommandQ delay -float 1.805555555555556
          - run: defaults write com.commandqapp.CommandQ launchOnBoot -bool true
        checklist:
          - License
          - Enable Start at Login

      - artifact: /Applications/FastScripts.app
        install:
          - cask: fastscripts
        configure:
          - run: defaults write com.red-sweater.fastscripts3 ShellScriptEditorIdentifier "com.sublimetext.4"
          # update via:
          # defaults read com.red-sweater.fastscripts3 ScriptKeyboardShortcuts | sed 's/[^0-9a-f]*//g'
          - run: defaults write com.red-sweater.fastscripts3 ScriptKeyboardShortcuts -data "e2925be062706c6973743030d4010203040506070000000000000a97"
        checklist:
          - License
          - Launch at login

      - artifact: /Applications/GPG Keychain.app
        install:
          - cask: gpg-suite-no-mail
        checklist:
          - Import/generate GPG keys as needed

      - artifact: /Applications/Hammerspoon.app
        install:
          - cask: hammerspoon
        checklist:
          - Configure to run at login
          - Enable Accessibility

      - artifact: /Applications/Hex Fiend.app
        install:
          - cask: hex-fiend
        configure:
          - run: defaults write com.ridiculousfish.HexFiend DefaultEditMode 2

      - artifact: /Applications/Ice.app
        install:
          - brew: jordanbaird-ice
        checklist:
          - Grant permissions
          - Launch at login
          - Configure menu bar as desired/following convention from existing systems

      - artifact: /Applications/IINA.app
        install:
          - cask: iina

      - artifact: /Applications/iTerm.app
        install:
          - cask: iterm2
        checklist:
          - Allow Full Disk Access
          - Sync settings from ~/.config/macos, taking care not to overwrite the files there
          - Make default term

      - artifact: /Applications/Kaleidoscope.app
        install:
          - cask: kaleidoscope
        checklist:
          - License
          - Set terminal app
          - Set font Meslo LG L Regular, size 14
          - Enable Finder extension
          - Enable Safari extension

      - artifact: /Applications/Latest.app
        install:
          - cask: latest

      - artifact: /Applications/LaunchControl.app
        install:
          - cask: launchcontrol
        configure:
          - run: defaults write "com.soma-zone.LaunchControl" "restoreSessionUponStart" '1'
          - run: defaults write "com.soma-zone.LaunchControl" "changeLabelWhenRename" '1'
          - run: defaults write "com.soma-zone.LaunchControl" "fileEditor" '"/Applications/Sublime Text.app"'
        checklist:
          - License
          - Allow full disk access
          - Install and allow full disk access for fdautil
          - Enable QuickLaunch
          - Hide QuickLaunch in menu bar

      - artifact: /Applications/LICEcap.app
        install:
          - cask: licecap

      - artifact: /Applications/noTunes.app
        install:
          - cask: notunes
        checklist:
          - Launch
          - Hide in menu bar
          - Add to Login Items

      - artifact: /Applications/OmniDiskSweeper.app
        install:
          - cask: omnidisksweeper
        checklist:
          - Allow full disk access

      - artifact: /Applications/Raindrop.io.app
        install:
          - cask: raindropio
        checklist:
          - Sign in

      - artifact: /Applications/Shortcat.app
        install:
          - cask: shortcat
        checklist:
          - Grant permissions
          - Move Finder Search to Ctrl-Command-Space (if needed)
          - Assign shortcut Alt-Command-Space
          - Launch at Login
          - Hide in menu bar, next to Alfred

      - artifact: /Applications/Sloth.app
        install:
          - cask: sloth

      - artifact: /Applications/Spotify.app
        install:
          - cask: spotify
        checklist:
          - Sign in
          - Disable launching at login

      - artifact: /Applications/Tailscale.app
        install:
          - cask: tailscale
        checklist:
          - Sign in

      - artifact: /Applications/The Unarchiver.app
        install:
          - cask: the-unarchiver

      - artifact: /Applications/Typora.app
        install:
          - cask: typora
        configure:
          - run: defaults write abnerworks.Typora "auto_expand_block" 0
          - run: defaults write abnerworks.Typora "copy_markdown_by_default" 1
          - run: defaults write abnerworks.Typora "enable_inline_math" 1
          - run: defaults write abnerworks.Typora prettyIndent 0
          - run: defaults write abnerworks.Typora quitAfterWindowClose 1
          - run: defaults write abnerworks.Typora "strict_mode" 1
          - run: defaults write abnerworks.Typora theme "Github"
          - run: defaults write abnerworks.Typora "use_seamless_window" 1
        checklist:
          - Associate with Markdown files
          - License

      - artifact: $HOME/Library/Screen Savers/Aerial.saver
        install:
          - cask: aerial

      - artifact: $HOME/Library/Screen Savers/Brooklyn.saver
        install:
          - cask: brooklyn

      - artifact: $HOME/Library/Fonts/JetBrainsMono-Regular.ttf
        install:
          - cask: font-jetbrains-mono
        checklist:
          - Configure terminal font
          - Update editor font settings

      - artifact: $HOME/Library/Fonts/NationalPark-Regular.otf
        install:
          - cask: font-national-park

      - artifact: /Applications/1Password for Safari.app
        install:
          - mas: "1569813296"
        checklist:
          - Enable Safari extension
          - Configure extension settings

      - artifact: /Applications/Bear.app
        install:
          - mas: "1091189122"
        configure:
          - run: defaults write net.shinyfrog.bear SFAppIconMatchesTheme -bool true
          - run: postinstall/bear.sh
        checklist:
          - Assign global keyboard shortcuts (⌃⇧N, ⌃⇧W)
          - Enable Bear Safari extension
          - "Set font size: 17"
          - "Set line width: 50em"

      - artifact: /Applications/Dropover.app
        install:
          - mas: "1355679052"
        checklist:
          - Start at login
          - Restore purchase

      - artifact: /Applications/Due.app
        install:
          - mas: "524373870"
        configure:
          - run: defaults write com.phocusllp.duemac prefIntDefaultSnoozeInterval -int 600
          - run: defaults write com.phocusllp.duemac prefIntApplicationRunningMode -int 1
          - run: defaults write com.phocusllp.duemac prefIntDefaultContentSizeCategory -int 0
          - run: defaults write com.phocusllp.duemac prefIntWeekStarts -int 1
          - run: defaults write com.phocusllp.duemac prefStringDue2ThemeName -string "Change with System"
          - run: defaults write com.phocusllp.duemac prefStringLastAutoDarkThemeName -string "Obsidian"
          - run: defaults write com.phocusllp.duemac prefStringLastAutoLightThemeName -string "Calcite"
        checklist:
          - Assign keyboard shortcut Ctrl-Shift-U
          - Start at Login
          - Enable Dropbox Sync
          - Customize Notifications
          - Restore purchases

      - artifact: /Applications/Instapaper Save.app
        install:
          - mas: "1481302432"
        checklist:
          - Sign in
          - Enable system share extension (not Safari extension)

      - artifact: $HOME/Applications/Instapaper Reader.app
        checklist:
          - "Create Safari web app (`https://instapaper.com/u`)"
          - Sign in

      - artifact: /Applications/NewFileMenu.app
        install:
          - mas: "1064959555"
        checklist:
          - Enable Finder extension
          - Enable opening & showing file after creation
          - Keep helper app open in background
          - Disable menu bar item
          - Set template storage directory (`~/.config/macos/NewFileMenu`)
          - Disable all templates except Plain Text, Markdown, and Shell Script

      - artifact: /Applications/Numbers.app
        install:
          - mas: "409203825"

      - artifact: /Applications/Pages.app
        install:
          - mas: "409201541"

      - artifact: /Applications/Keynote.app
        install:
          - mas: "409183694"

      - artifact: /Applications/Paint S.app
        install:
          - mas: "736473980"
        checklist:
          - Restore purchases

      - artifact: /Applications/TableFlip.app
        install:
          - cask: tableflip

      - artifact: /Applications/Pastebot.app
        install:
          - mas: "1179623856"
        configure:
          - run: defaults write com.tapbots.Pastebot2Mac AlwaysPastePlainText -bool true
          - run: defaults write com.tapbots.Pastebot2Mac SoundsEnabled -bool false
          - run: defaults write com.tapbots.Pastebot2Mac UIVisibilityState 2
          - run: defaults write com.tapbots.Pastebot2Mac "StartSequentialPasteHotKeyCleared" '1'
          - run: defaults write com.tapbots.Pastebot2Mac "PasteAndDequeueHotKeyCleared" '1'
          - run: defaults write com.tapbots.Pastebot2Mac "MaxNumberClipboardEntries" '500'
        checklist:
          - Start at login
          - Set/confirm Shift-Command-V global shortcut
          - Configure, especially Always Paste Plain Text
          - Enable Accessibility control

      - artifact: /Applications/PCalc.app
        install:
          - mas: "403504866"

      - artifact: /Applications/PDF Viewer.app
        install:
          - mas: "1120099014"

      - artifact: /Applications/Peek.app
        install:
          - mas: "1554235898"
        checklist:
          - Enable Accessibility access as required
          - Change max preview size to Medium 500K
          - Change font Meslo LG M 13pt

      - artifact: /Applications/Poolsuite FM.app
        install:
          - mas: "1514817810"
        checklist:
          - Sign in

      - artifact: /Applications/RadarScope.app
        install:
          - mas: "288419283"
        configure:
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.isAllisonHouseEnabled" -bool false
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.isWeatherOpsEnabled" -bool false
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.metFeatureSetState" -int 2
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.proFeatureSetState" -int 2
          - run: defaults write com.basevelocity.RadarScope dataProvider -string "wdt"
          - run: defaults write com.basevelocity.RadarScope fontScale -string "1.6"
          - run: defaults write com.basevelocity.RadarScope isSidebarCollasped -bool false
          - run: defaults write com.basevelocity.RadarScope lightningProvider -string "wdtp"
          - run: defaults write com.basevelocity.RadarScope premiumProductsProvider -string "wdtp"
          - run: defaults write com.basevelocity.RadarScope showCities -bool false
          - run: defaults write com.basevelocity.RadarScope showDiscussions -bool true
          - run: defaults write com.basevelocity.RadarScope showLightning -bool true
          - run: defaults write com.basevelocity.RadarScope showResearchRadars -bool true
          - run: defaults write com.basevelocity.RadarScope showSpotterReports -bool true
          - run: defaults write com.basevelocity.RadarScope showStormReports -bool true
          - run: defaults write com.basevelocity.RadarScope showStormTracks -bool true
          - run: defaults write com.basevelocity.RadarScope showTDWRs -bool true
          - run: defaults write com.basevelocity.RadarScope showWatches -bool true
          - run: defaults write com.basevelocity.RadarScope warningProvider -string "wdt"
        checklist:
          - Restore purchases
          - Sign into RadarScope account
          - Sign into Spotter Network account

      - artifact: /Applications/Reeder.app
        install:
          - mas: "1529448980"
        configure:
          - run: defaults write com.reederapp.5.macOS "app.appearance" 10
          - run: defaults write com.reederapp.5.macOS "app.appearance.opaque" '1'
          - run: defaults write com.reederapp.5.macOS "app.content-size-category" '3'
          - run: defaults write com.reederapp.5.macOS "app.default-browser" -string "com.apple.Safari"
          - run: defaults write com.reederapp.5.macOS "app.filter" 2
          - run: defaults write com.reederapp.5.macOS "app.grayscale-favicons" -bool true
          - run: defaults write com.reederapp.5.macOS "app.icon-badge" 0
          - run: defaults write com.reederapp.5.macOS "app.layout" 3
          - run: defaults write com.reederapp.5.macOS "app.state.controller" -string "streams"
          - run: defaults write com.reederapp.5.macOS "app.state.stream.type" 0
          - run: defaults write com.reederapp.5.macOS "app.state.stream.user" -string "Feedbin/chris@chrisdzombak.net"
          - run: defaults write com.reederapp.5.macOS "app.state.user" -string "Feedbin/chris@chrisdzombak.net"
          - run: defaults write com.reederapp.5.macOS "article.font-size" 17
          - run: defaults write com.reederapp.5.macOS "article.increase-contrast" -bool true
          - run: defaults write com.reederapp.5.macOS "article.max.width" '40'
          - run: defaults write com.reederapp.5.macOS "bionic.toolbar" -bool false
          - run: defaults write com.reederapp.5.macOS "browser.open-links-in-background" -bool true
          - run: defaults write com.reederapp.5.macOS "browser.open-links-in-default-browser" -bool true
          - run: defaults write com.reederapp.5.macOS "corekit.animator.configuration" 2
          - run: defaults write com.reederapp.5.macOS "subscriptions-hide-allitems-count" -bool false
        checklist:
          - Sign into Feedbin
          - Feedbin settings sync every 15m; sync on wake; unread count in app icon; keep 2 days archive

      - artifact: /Applications/Service Station.app
        install:
          - mas: "1503136033"
        checklist:
          - Install/sync current configuration
          - Enable Finder extension
          - Allow access to / and other relevant volumes
          - Restore purchases

      - artifact: /Applications/Shareful.app
        install:
          - mas: "1522267256"
        checklist:
          - Enable share extensions Copy, Open In, Save As

      - artifact: /Applications/Soro.app
        install:
          - mas: "1550457805"

      - artifact: /Applications/Spaced.app
        install:
          - mas: "1666327168"

      - artifact: /Applications/Tot.app
        install:
          - mas: "1491071483"
        checklist:
          - Start at login
          - Add to Dock
          - Control with Dock Icon; customize color
          - Shortcut Ctrl-Shift-'

      - artifact: /Applications/Things3.app
        install:
          - mas: "904280696"
        configure:
          - run: 'defaults write com.culturedcode.ThingsMac NSUserKeyEquivalents ''{ "New Repeating To-Do" = "@$r"; }'''
          - run: defaults write com.culturedcode.ThingsMac CCDockCountType 1
          - run: defaults write com.culturedcode.ThingsMac UriSchemeEnabled -bool true
        checklist:
          - Sign into Things Cloud account
          - Set keyboard shortcuts (⌃⌥Space for Quick Entry, ⌃⇧I for Autofill)
          - Enable autofill via Things Helper
          - Set calendar & reminders integration settings

      # Safari Extensions
      - artifact: /Applications/RSS Button for Safari.app
        install:
          - mas: "1437501942"
        checklist:
          - Configure for Reeder.app
          - Enable RSS Button Safari extension

      - artifact: /Applications/Save to Raindrop.io.app
        install:
          - mas: "1549370672"
        checklist:
          - Enable Save to Raindrop Safari extension

      - artifact: /Applications/Tabs to Links.app
        install:
          - mas: "1451408472"
        checklist:
          - Enable Safari extension

      - artifact: /Applications/Wayback Machine.app
        install:
          - mas: "1472422"
        checklist:
          - Enable Safari extension (as desired)

      - artifact: /Applications/Wipr.app
        install:
          - mas: "1320666476"
        checklist:
          - Enable extensions
          - Hide in Safari toolbar

      - artifact: /Applications/StopTheNews.app
        install:
          - script: install/stopthenews.sh
        checklist:
          - Enable StopTheNews Safari extension

      - artifact: /Applications/BetterTouchTool.app
        install:
          - cask: bettertouchtool
        checklist:
          - Sync settings (Dropbox)
          - License

      - artifact: "/Applications/Tembo.app"
        configure:
          - run: defaults write com.houdah.Tembo3 enableTemboHelper 1
          - run: defaults write com.houdah.Tembo3 quitOnCloseOfLastWindow 1
        checklist:
          - "[Download](https://www.houdah.com/tembo/download.html) and install Tembo"
          - Register (details in 1Password)
          - Grant permissions (in Privacy tab)
          - Enable helper; hide Menu Bar icon
          - Set global shortcut Ctrl-Shift-Cmd-Space
          - Set Groups, Defaults, locations per config screenshots

      - artifact: "/Applications/Apparency.app"
        install:
          - cask: apparency

      - artifact: /Applications/Fork.app
        install:
          - cask: fork
        configure:
          - run: defaults write com.DanPristupov.Fork defaultSourceFolder "$HOME/code"
          - run: defaults write com.DanPristupov.Fork diffFontName "MesloLGL-Regular"
          - run: defaults write com.DanPristupov.Fork diffFontSize 14
          - run: defaults write com.DanPristupov.Fork SUAutomaticallyUpdate 1
        checklist:
          - Activate license
          - Switch to Stable update channel
          - Set Git instance (use Homebrew Git)
          - Set Terminal tool (iTerm2)
          - Set Diff & Merge tools (Kaleidoscope)
          - Set GitHub Desktop as default GitHub tool
          - Sign into GitHub account (as desired)

      - artifact: $BREW/bin/cloc
        install:
          - brew: cloc

      - artifact: $BREW/bin/hexyl
        install:
          - brew: hexyl

      - artifact: $BREW/bin/entr
        install:
          - brew: entr

      - artifact: $BREW/bin/fswatch
        install:
          - brew: fswatch

      - artifact: $BREW/bin/watchexec
        install:
          - brew: watchexec

      - artifact: $BREW/bin/semver
        install:
          - npm: semver

      - artifact: $BREW/bin/watchman
        install:
          - brew: watchman

      - artifact: /Applications/JSON Editor.app
        install:
          - mas: "567740330"
        configure:
          - run: defaults write com.vladbadea.jsoneditor PLEPlistOutlineViewFontName "MesloLGL-Regular"
          - run: defaults write com.vladbadea.jsoneditor PLEPlistOutlineViewFontSize 13
        checklist:
          - Associate with JSON files

      - artifact: /Applications/Easy CSV Editor.app
        install:
          - mas: "1171346381"
        checklist:
          - Associate with CSV files

      - artifact: /Applications/PLIST Editor.app
        install:
          - mas: "1157491961"
        checklist:
          - Associate with PLIST files

      - artifact: /Applications/Pixelmator Pro.app
        install:
          - mas: "1289583905"

      - artifact: /Applications/Acorn.app
        install:
          - mas: "https://apps.apple.com/us/app/acorn-8/id6737921844?mt=12"

      - artifact: $BREW/bin/httpie
        install:
          - brew: httpie

      - artifact: $BREW/bin/websocat
        install:
          - brew: websocat

      - artifact: $BREW/bin/golint
        install:
          - gomod: golang.org/x/lint/golint

      - artifact: $BREW/bin/goimports
        install:
          - gomod: golang.org/x/tools/cmd/goimports

      - artifact: $BREW/bin/gorc
        install:
          - gomod: github.com/stretchr/gorc

      - artifact: $BREW/bin/pkger
        install:
          - gomod: github.com/markbates/pkger/cmd/pkger

      - artifact: $BREW/bin/golangci-lint
        install:
          - brew: golangci-lint

      - artifact: $BREW/bin/ifacemaker
        install:
          - gomod: github.com/vburenin/ifacemaker

      - artifact: $BREW/bin/virtualenv
        install:
          - brew: virtualenv

      - artifact: $BREW/bin/black
        install:
          - brew: black

      - artifact: $BREW/bin/flake8
        install:
          - brew: flake8

      - artifact: $BREW/bin/mypy
        install:
          - brew: mypy

      - artifact: $BREW/bin/pylint
        install:
          - brew: pylint

      - artifact: $BREW/bin/ruff
        install:
          - brew: ruff

      - artifact: $BREW/bin/tsc
        install:
          - brew: typescript

      - artifact: $BREW/bin/prettier
        install:
          - brew: prettier

      - artifact: $BREW/bin/eslint
        install:
          - brew: eslint

      - artifact: $BREW/bin/act
        install:
          - brew: act

      - artifact: $BREW/bin/dive
        install:
          - brew: dive

      - artifact: $BREW/bin/dockerfilelint
        install:
          - npm: dockerfilelint

      - artifact: $BREW/bin/hadolint
        install:
          - brew: hadolint

      - artifact: $BREW/bin/ffmpeg
        install:
          - brew: ffmpeg

      - artifact: $BREW/bin/air
        install:
          - gomod: github.com/cosmtrek/air

      - artifact: $BREW/bin/gorc
        install:
          - gomod: github.com/cdzombak/gorc

      - artifact: $BREW/bin/nodemon
        install:
          - npm: nodemon

      - artifact: $BREW/bin/pipenv
        install:
          - brew: pipenv

      - artifact: $BREW/bin/iperf3
        install:
          - brew: iperf3

      - artifact: $BREW/sbin/mtr
        install:
          - brew: mtr

      - artifact: $BREW/bin/nmap
        install:
          - brew: nmap

      - artifact: $BREW/bin/speedtest
        install:
          - run: brew tap showwin/speedtest
          - brew: speedtest

      - artifact: $BREW/bin/telnet
        install:
          - brew: telnet

      - artifact: "$HOME/Library/Developer/Xcode/UserData/FontAndColorThemes/Solarized Light.xccolortheme"
        install:
          - script: install/xcode-solarized.sh

      - artifact: /Applications/UnicodeChecker.app
        install:
          - cask: unicodechecker
        configure:
          - run: defaults write "net.earthlingsoft.UnicodeChecker" "Use last Codepoint" '1'

      - artifact: $HOME/Applications/UniChar.app
        checklist:
          - "Create Safari web app (`https://unichar.app/web/`)"

      - artifact: /Applications/JSON Editor.app
        install:
          - mas: "https://apps.apple.com/us/app/json-editor/id567740330?mt=12"
        configure:
          - run: /usr/local/bin/utiluti type set public.json com.vladbadea.jsoneditor

  - group: SSH & Yubikeys
    software:
      - artifact: /Applications/Secretive.app
        install:
          - cask: secretive
        configure:
          - script: postinstall/secretive.sh
        checklist:
          - Walk through setup
          - Generate a key for this machine
          - Add key to SSH config

      - artifact: $BREW/bin/yubikey-agent
        persist: true
        install:
          - run: brew tap filippo.io/yubikey-agent https://filippo.io/yubikey-agent
          - brew: yubikey-agent
        configure:
          - script: postinstall/yubikey-agent.sh
          - run: brew services start yubikey-agent
        checklist:
          - Use yubikey-agent -setup to generate a new SSH key, if needed
          - Add new public key to SSH config

      - artifact: $BREW/bin/ykman
        persist: true
        install:
          - brew: ykman
        checklist:
          - Configure YubiKey management CLI

      - artifact: /Applications/YubiKey Manager.app
        persist: true
        install:
          - cask: yubico-yubikey-manager
        checklist:
          - Configure YubiKey settings via GUI

  - group: Personal
    software:
      - artifact: /Applications/Day One.app
        persist: true
        install:
          - mas: "1044867090"
        checklist:
          - Sign into Day One account
          - Disable global shortcut
          - Disable creating tags from hashtags
          - Disable daily prompt

  - group: Setapp
    optional: false
    software:

      - artifact: /Applications/Setapp.app
        install:
          - cask: setapp
        configure:
          - run: defaults write com.setapp.DesktopClient EnableLauncher -bool false
          - run: defaults write com.setapp.DesktopClient KeepTeasers -bool false
          - run: defaults write com.setapp.DesktopClient ShouldLoadFinderSyncExtensionOnLaunch -bool false
          - run: defaults write "com.setapp.DesktopClient" "shouldBlockPushBanner" '1'
        checklist:
          - Sign in to Setapp
          - Disable "Show in Finder Sidebar"
          - Install applications as desired from Setapp Favorites
          - Re-run post-install configuration script
          - Disable global search shortcut
          - Disable the launch agent com.setapp.DesktopClient.SetappLauncher using LaunchControl (disable, unload, and change disabled override)

      - artifact: /Applications/Setapp/Meta.app

      - artifact: /Applications/Setapp/Renamer.app

      - artifact: /Applications/Setapp/Keysmith.app
        checklist:
          - Clear all shortcuts except quick launcher
          - Set quick launcher shortcut to Ctrl-Alt-Cmd-Space
          - Configure sync via Syncthing
          - Launch at login

  # Development tools (optional)
  - group: Dev
    software:
      - artifact: /Applications/Expressions.app
        persist: true
        install:
          - mas: "913158085"
        checklist:
          - Configure regex preferences

      - artifact: /Applications/Sublime Merge.app
        persist: true
        install:
          - cask: sublime-merge
        checklist:
          - License

      - artifact: /Applications/TextBuddy.app
        persist: true
        install:
          - mas: "1487928210"
        configure:
          - run: defaults write "com.clickontyler.TextBuddy" "numberLinesFromZero" '0'
          - run: defaults delete "com.clickontyler.TextBuddy" "userSyncEnabled"
          - run: defaults delete "com.clickontyler.TextBuddy" "showOnActivate"
        checklist:
          - Assign global shortcut Ctrl+Shift+T
          - License

      - artifact: /Applications/Boop.app
        persist: true
        install:
          - mas: "1518425043"

      - artifact: /Applications/Visual Studio Code.app
        persist: true
        install:
          - cask: visual-studio-code
        checklist:
          - Sync settings using Github account

      - artifact: /Applications/JetBrains Toolbox.app
        persist: true
        install:
          - cask: jetbrains-toolbox
        checklist:
          - Sign into JetBrains account
          - Enable automatic updates
          - Enable 'Generate Shell Scripts' to ~/opt/bin
          - Enable 'Run at Login'
          - Install IDEs as desired
          - Enable settings & plugin syncing

      - artifact: /Applications/Dash.app
        persist: true
        install:
          - cask: dash
        checklist:
          - Sync settings from ~/.config/macos
          - Sync snippets
          - Review & Arrange docsets as desired
          - License

      - artifact: /Applications/GitHub Desktop.app
        install:
          - cask: github
        checklist:
          - Sign in
          - Set external editor and shell
          - Install CLI tool

      - artifact: /Applications/WWDC.app
        persist: true
        install:
          - cask: wwdc-for-macos

      - artifact: /Applications/SF Symbols.app
        persist: true
        install:
          - cask: sf-symbols

      - artifact: /Applications/Redis Insight.app
        persist: true
        install:
          - cask: redis-insight

      - artifact: /Applications/RapidAPI.app
        persist: true
        install:
          - cask: rapidapi
        configure:
          - run: defaults write com.luckymarmot.Paw SUAutomaticallyUpdate 1
        checklist:
          - Sign in / License
          - Set font Meslo LG L 14

      - artifact: /Applications/HTTP Toolkit.app
        install:
          - cask: http-toolkit

      - artifact: /Applications/Script Debugger.app
        install:
          - cask: script-debugger

      - artifact: $BREW/bin/carthage
        persist: true
        install:
          - brew: carthage

      - artifact: $BREW/bin/react-native
        persist: true
        install:
          - npm: react-native-cli

      - artifact: $BREW/bin/sbt
        persist: true
        install:
          - brew: sbt

      - artifact: $BREW/bin/java
        persist: true
        install:
          - cask: temurin

      - artifact: $BREW/bin/mvn
        persist: true
        install:
          - brew: maven

      - artifact: $BREW/bin/gradle
        persist: true
        install:
          - brew: gradle

      - artifact: $BREW/bin/aws
        persist: true
        install:
          - brew: awscli

      - artifact: $BREW/bin/doctl
        persist: true
        install:
          - brew: doctl

      - artifact: $BREW/bin/gcloud
        persist: true
        install:
          - cask: google-cloud-sdk

      - artifact: /Applications/OrbStack.app
        persist: true
        install:
          - cask: orbstack
        configure:
          - run: mkdir -p "$HOME/opt/bin"
          - run: ln -sf "$HOME/.orbstack/ssh/config" "$HOME/.ssh/config_orbstack" || true
        checklist:
          - Start at login; show in menu bar
          - Automatically download updates
          - Set memory and CPU limits as desired

      # - artifact: /Applications/Docker.app
      #   install:
      #     - cask: docker
      #   configure:
      #     - run: mkdir -p "$HOME/opt/bin"
      #   checklist:
      #     - Disable application starting at login, as desired
      #     - Disable weekly tips
      #     - Enable Docker Compose V2, as desired

      - artifact: $BREW/bin/periodic-docker-pull
        install:
          - run: brew tap cdzombak/oss ; brew install periodic-docker-pull

      - artifact: /Applications/UTM.app
        persist: true
        install:
          - mas: "1538878817"

      - artifact: $BREW/bin/k9s
        persist: true
        install:
          - run: brew tap derailed/k9s ; brew install k9s

      - artifact: $BREW/bin/kail
        persist: true
        install:
          - run: brew tap boz/repo ; brew install kail

      - artifact: /Applications/Lens.app
        persist: true
        install:
          - cask: lens

      - artifact: /Applications/ServerCat.app
        persist: true
        install:
          - mas: "1501532023"
        checklist:
          - Add servers as desired

      - artifact: $BREW/bin/esphome
        persist: true
        install:
          - brew: esphome

      - artifact: /Applications/Arduino IDE.app
        persist: true
        install:
          - cask: arduino-ide

      - name: PlatformIO
        artifact: $BREW/bin/pio
        persist: true
        install:
          - brew: platformio

      - artifact: /Applications/Raspberry Pi Imager.app
        persist: true
        install:
          - cask: raspberry-pi-imager

      - artifact: /Applications/balenaEtcher.app
        persist: true
        install:
          - cask: balenaetcher

      - artifact: $BREW/bin/fio
        persist: true
        install:
          - brew: fio

      - artifact: $BREW/bin/f3read
        persist: true
        install:
          - brew: f3

      - artifact: /Applications/SuperDuper!.app
        persist: true
        install:
          - cask: superduper
        checklist:
          - Add this system to backup strategy/plan/routine

      - artifact: /Applications/Tor Browser.app
        persist: true
        install:
          - cask: tor-browser

      - artifact: /Applications/Wireshark.app
        persist: true
        install:
          - cask: wireshark

      - artifact: $HOME/Applications/Clock.app
        checklist:
          - "Create Safari web app (`https://clock.dzdz.cz`)"

      - artifact: $HOME/Applications/JSON Viewer.app
        checklist:
          - "Create Safari web app (`https://json.dzdz.cz`)"

      - artifact: $HOME/Applications/Transform Tools.app
        checklist:
          - "Create Safari web app (`https://transform.tools/`)"

  # AI tools (optional)
  - group: AI
    software:
      - artifact: /Applications/TalkTastic.app
        note: https://talktastic.com/download
        checklist:
          - "Set shortcut: ⌥ + Space"
          - Launch at Login

      - artifact: /Applications/Claude.app
        install:
          - cask: claude
        checklist:
          - "Set keyboard shortcut: ⌃ + ⇧ + Space"
          - Run on Startup
          - Show in Menu Bar

      - artifact: $HOME/mcp
        note: Synced via Syncthing
        checklist:
          - Hardlink Claude Desktop config per README

      - artifact: /Users/cdzombak/.claude/local/claude
        install:
          - npm: "@anthropic-ai/claude-code"

      - artifact: $HOME/Applications/claudia
        persist: true
        install:
          - script: install/claudia.sh

      - artifact: $HOME/Applications/Ollama.app
        persist: true
        checklist:
          - "Create Safari web app (`https://jetstream.tailnet-003a.ts.net:7778`)"

      - artifact: $HOME/Applications/Devin.app
        persist: true
        checklist:
          - "Create Safari web app (`https://app.devin.ai`)"

      - artifact: $HOME/Applications/GitHub Copilot.app
        persist: true
        checklist:
          - "Create Safari web app (`https://github.com/copilot`)"

      - artifact: $HOME/Applications/Google AI Studio.app
        persist: true
        checklist:
          - "Create Safari web app (`https://aistudio.google.com`)"

      - artifact: /Applications/iTermAI.app
        install:
          - cask: itermai

      - artifact: $BREW/bin/llm
        install:
          - brew: llm
          - run: "llm install --upgrade llm-ollama"
          - run: "llm install --upgrade llm-gemini"
        configure:
          - run: "env OLLAMA_HOST=https://jetstream.tailnet-003a.ts.net:7777 llm models default deepseek-r1:8b"
        checklist:
          - "Set Gemini API key: `llm keys set gemini` (ref. 1Password)"

      - artifact: /Applications/Goose.app
        persist: true
        install:
          - cask: block-goose
        checklist:
          - "Set up Ollama (`https://jetstream.tailnet-003a.ts.net:7777`)"
          - "Set Gemini API key: `llm keys set gemini` (ref. 1Password)"

      - artifact: $BREW/bin/goose
        persist: true
        install:
          - brew: block-goose-cli

  # CAD, 3D Printing, Electronics & Radio tools (optional)
  - group: CAD, 3D Printing, Electronics & Radio
    software:
      - artifact: /Applications/BambuStudio.app
        persist: true
        install:
          - cask: bambu-studio

      - artifact: /Applications/UltiMaker Cura.app
        persist: true
        install:
          - cask: ultimaker-cura
        checklist:
          - Sign In
          - Install Mesh Tools extension
          - Restore settings etc. from most recent backup (Extensions > Cura Backups)

      - artifact: $HOME/Applications/Autodesk Fusion.app
        persist: true
        install:
          - cask: autodesk-fusion
        # configure:
        #   - run: rm -f "/Applications/Autodesk Fusion Installer.app"
        checklist:
          - Sign In

      - artifact: /Applications/OpenSCAD.app
        persist: true
        install:
          - cask: openscad

      - artifact: /Applications/Meshman 3D Viewer PRO.app
        persist: true
        install:
          - mas: "https://apps.apple.com/us/app/meshman-3d-viewer-pro/id1502933106?mt=12"

      - artifact: /Applications/LTspice.app
        persist: true
        install:
          - cask: ltspice

      - artifact: /Applications/KiCad/KiCad.app
        persist: true
        install:
          - cask: kicad

      - artifact: /Applications/Qucs-S.app
        persist: true
        install:
          - run: brew tap ra1nb0w/qucs-s ; brew install --cask qucs-s

      - artifact: /Applications/CubicSDR.app
        persist: true
        install:
          - cask: cubicsdr

      - artifact: /Applications/CHIRP.app
        persist: true
        install:
          - cask: chirp

  # Office and productivity applications (optional)
  - group: Office
    software:
      - artifact: /Applications/Firefox.app
        install:
          - cask: firefox
        checklist:
          - Sign into Firefox Sync
          - Change device name
          - Sync uBlock settings from cloud storage
          - Customize toolbar
          - Remove default bookmarks
          - Disable Pocket (about:config and disable extensions.pocket.enabled)

      - artifact: /Applications/Google Drive.app
        persist: true
        install:
          - cask: google-drive
        checklist:
          - Authenticate

      - artifact: /Applications/Zotero.app
        install:
          - cask: zotero

      - artifact: /Applications/Clocker.app
        install:
          - mas: "1056643111"

      - artifact: /Applications/Diagrams.app
        install:
          - mas: "1276248849"

      - artifact: /Applications/draw.io.app
        install:
          - cask: drawio

      - artifact: /Applications/Monodraw.app
        install:
          - cask: monodraw
        checklist:
          - Register (link in 1Password)

      - artifact: /Applications/OmniGraffle.app
        install:
          - cask: omnigraffle
        checklist:
          - License

      - artifact: /Applications/OmniOutliner.app
        install:
          - cask: omnioutliner
        configure:
          - run: defaults write com.omnigroup.OmniOutliner5 OOReturnShouldCreateNewRow 0
          - run: defaults write com.omnigroup.OmniOutliner5 OOTabShouldNavigateCells 1
        checklist:
          - License
          - Link template folder in ~/.config/macos/OmniOutliner

      - artifact: /Applications/Deckset.app
        install:
          - cask: deckset

      - artifact: /Applications/PDFScanner.app
        install:
          - mas: "410968114"

      - artifact: /Applications/Calca.app
        install:
          - mas: "635758264"

      - artifact: /Applications/Parcel.app
        persist: true
        install:
          - mas: "639968404"
        checklist:
          - Allow notifications
          - Tweak system notification settings (all off except "Show in Notification Center")
          - Enable calendar integration

      - artifact: /Applications/TeX
        persist: true
        install:
          - cask: mactex

      - artifact: /Applications/texmaker.app
        persist: true
        install:
          - cask: texmaker

  # Communication applications (optional)
  - group: Communications
    software:
      - artifact: /Applications/Mimestream.app
        persist: true
        install:
          - cask: mimestream
        configure:
          - run: defaults write com.mimestream.Mimestream TextSizeAdjustment 2
          - run: defaults write com.mimestream.Mimestream HideBadgeForSpam 1
          - run: defaults write com.mimestream.Mimestream PlaySounds none
          - run: defaults write com.mimestream.Mimestream DeleteKeyAction 'trash'
          - run: 'defaults write com.mimestream.Mimestream NSUserKeyEquivalents ''{ "Add Star" = "@^s"; "Remove Star" = "@^s"; }'''
        checklist:
          - Add personal accounts; set account name
          - Customize main window & message window toolbars
          - Increase font size
          - Notification config Show in Notification Center and display badge

      - artifact: /Applications/Discord.app
        persist: true
        install:
          - cask: discord
        checklist:
          - Login
          - Disable unread message badge (Preferences > Notifications)
          - Disable notification sounds in System Preferences

      - artifact: /Applications/Slack.app
        persist: true
        install:
          - cask: slack
        checklist:
          - Sign in to Slack accounts

      - artifact: /Applications/zoom.us.app
        persist: true
        install:
          - cask: zoom
        configure:
          - run: sudo rm -rf ~/.zoomus
          - run: defaults write us.zoom.xos BounceApplicationSetting 2
        checklist:
          - Enable microphone mute when joining meeting
          - Disable video when joining meeting
          - Generally configure as desired

      - artifact: /Applications/Signal.app
        install:
          - cask: signal
        checklist:
          - Authenticate with phone

      - artifact: /Applications/MuteDeck.app
        install:
          - script: install/mutedeck.sh
        checklist:
          - Enable Accessibility permissions
          - Enable System Microphone & Zoom only
          - Start at login
          - Don't open window at start
          - Hide in menu bar

  # Multimedia, photography, and media tools (optional)
  - group: Multimedia & Photography
    software:
      - artifact: /Applications/Affinity Photo 2.app
        persist: true
        install:
          - cask: affinity-photo

      - artifact: /Applications/RAW Power.app
        persist: true
        install:
          - mas: "1157116444"
        configure:
          - run: defaults write com.gentlemencoders.RAWPower "Save Edits Automatically" 1
          - run: defaults write com.gentlemencoders.RAWPower "Use Current Directory for Export" 1
          - run: defaults write 6MR872QP3J.RAWPower.sharedDefaults viewerBrightness 0.9
          - run: defaults write 6MR872QP3J.RAWPower.sharedDefaults interfaceBrightness 0.9

      - artifact: /Applications/ColorSnapper2.app
        persist: true
        install:
          - mas: "969418666"

      - artifact: /Applications/Adobe Creative Cloud.app
        persist: true
        install:
          - cask: adobe-creative-cloud
        checklist:
          - Sign into Adobe Account
          - Install Lightroom
          - Install Photoshop

      - artifact: /Applications/Handbrake.app
        persist: true
        install:
          - script: install/handbrake.sh

      - artifact: $BREW/bin/yt-dlp
        persist: true
        install:
          - brew: yt-dlp

      - artifact: /Applications/Android File Transfer.app
        note: For transferring files to Android e-readers
        persist: true
        install:
          - cask: android-file-transfer

      - artifact: /Applications/Fileloupe.app
        persist: true
        install:
          - mas: "944693506"
        checklist:
          - Grant full disk access

      - artifact: /Applications/Avenue.app
        persist: true
        install:
          - mas: "1523681067"
        configure:
          - run: duti -s com.vincent-neo.Avenue public.gpx viewer
        checklist:
          - Configure photo viewing preferences

      - artifact: /Applications/Claquette.app
        persist: true
        install:
          - mas: "587748131"
        checklist:
          - Configure GIF creation preferences

      - artifact: /Applications/Topaz Sharpen AI.app
        persist: true
        install:
          - cask: topaz-sharpen-ai
        checklist:
          - Enter license key
          - Configure AI enhancement settings

      - artifact: /Applications/PhotoSweeper X.app
        persist: true
        install:
          - cask: photosweeper-x
        checklist:
          - Configure duplicate photo detection

      - artifact: /Applications/Geotag.app
        persist: true
        install:
          - cask: geotag
        checklist:
          - Set backups directory to ~/tmp/GeoTag Backups

      - artifact: /Applications/Inkscape.app
        persist: true
        install:
          - cask: inkscape

      - artifact: /Applications/FontForge.app
        persist: true
        install:
          - cask: fontforge

      - artifact: "/Applications/ff·Works.app"
        persist: true
        install:
          - cask: ff-works

      - artifact: /Applications/DXOPhotoLab8.app
        persist: true
        note: https://www.dxo.com/dxo-photolab/download/

      - artifact: /Applications/DxO FilmPack 7.app
        persist: true
        note: https://www.dxo.com/dxo-filmpack/download/

      - artifact: /Applications/SIGMA Photo Pro 6.app
        persist: true
        note: https://www.sigma-global.com/en/support/software/sigma-photo-pro/?os=mac

      - artifact: /Applications/SIGMA Optimization Pro.app
        persist: true
        note: https://www.sigma-global.com/en/support/software/sigma-optimization-pro/?os=mac

      - artifact: $HOME/Library/QuickLook/X3F QL Plugin.qlgenerator
        persist: true
        note: https://dropbox.dzombak.com/X3F-QL-Plugin.qlgenerator.zip
        checklist:
          - Download and install
          - Enable in System Settings

      - artifact: $BREW/bin/xtool
        persist: true
        install:
          - run: brew install cdzombak/oss/xtool
        configure:
          - run: xtool install -scripts
          - run: xtool install -x3f-extract
          - script: postinstall/xtool.sh

      - artifact: $HOME/opt/bin/x3f_extract
        persist: true
        note: https://github.com/Kalpanika/x3f
        checklist:
          - Download from https://github.com/Kalpanika/x3f
          - Install x3f tools to $HOME/opt/bin

      - artifact: /Applications/Logic Pro X.app
        persist: true
        install:
          - mas: "634148309"

      - artifact: /Applications/Compressor.app
        persist: true
        install:
          - mas: "424390742"

      - artifact: /Applications/Final Cut Pro.app
        persist: true
        install:
          - mas: "424389933"

      - artifact: /Applications/Motion.app
        persist: true
        install:
          - mas: "434290957"

  # Home automation and smart home tools (optional)
  - group: Home
    software:
      - artifact: /Applications/Sonos.app
        persist: true
        install:
          - cask: sonos
        checklist:
          - "Note: do not enable notifications"

      - artifact: $HOME/Applications/UniFi Protect.app
        persist: true
        checklist:
          - "Create Safari web app (`https://unifi.ui.com/consoles/788A204135D20000000002A23AAC0000000002BC292500000000594C9DDB:831189568/protect/dashboard/all`)"
          - Sign in

      - artifact: $HOME/Applications/Frigate.app
        persist: true
        checklist:
          - "Create Safari web app (`https://boston.tailnet-003a.ts.net:8971/`)"
          - Sign in

      - artifact: $HOME/Applications/Ecobee.app
        checklist:
          - "Create Safari web app (`https://www.ecobee.com/consumerportal/index.html#/devices`)"
          - Sign in

  # Music, podcasts, and reading applications (optional)
  - group: "Music, Movies, Podcasts & Reading"
    software:
      - artifact: /Applications/Plexamp.app
        install:
          - cask: plexamp
        checklist:
          - Sign into Plex account
          - Use Large font size (Settings > Experience)
          - Use system window controls (Settings > Experience > Desktop Integration)
          - Turn off notifications (Settings > Experience > Desktop Integration)
          - Set 160Kbps conversion bitrate (Settings > Playback > Streaming Quality)
          - Disable crossfades (aka "Sweet Fades") (Settings > Playback)

      - artifact: /Applications/Plex.app
        persist: true
        install:
          - cask: plex
        checklist:
          - Sign into Plex account

      - artifact: /Applications/Infuse.app
        persist: true
        install:
          - mas: "1136220934"
        checklist:
          - Sign into Plex servers as desired
          - Add file shares as desired
          - Disable file shares in Library views
          - Restore purchases

      - artifact: $HOME/Applications/Lofi Cafe.app
        persist: true
        checklist:
          - "Create Safari web app (`https://lofi.cafe`)"

      - artifact: /Applications/Pocket Casts.app
        persist: true
        install:
          - cask: pocket-casts
        checklist:
          - Sign in to Pocket Casts account

      - artifact: /Applications/YT Music.app
        persist: true
        install:
          - cask: yt-music

      - artifact: /Applications/Triode.app
        persist: true
        install:
          - mas: "1450027401"

      - artifact: /Applications/Kindle.app
        persist: true
        install:
          - mas: "405399194"
        checklist:
          - Sign in to Amazon account

      - artifact: /Applications/Calibre.app
        persist: true
        install:
          - cask: calibre

      - artifact: /System/Library/Screen Savers/WebViewScreenSaver.saver
        persist: true
        install:
          - cask: webviewscreensaver
        checklist:
          - Set URL to https://www.bryanbraun.com/after-dark-css/all/flying-toasters.html
          - Set other URLs from https://www.bryanbraun.com/after-dark-css as desired

      - artifact: "/Applications/Remote for Mac.app"
        persist: true
        install:
          - script: install/remote-for-mac.sh
        checklist:
          - Work through required permissions

      - artifact: /Applications/MusicBrainz Picard.app
        persist: true
        install:
          - cask: musicbrainz-picard

  # Social networking applications (optional)
  - group: Social Networking
    software:

      - artifact: /Applications/Ivory.app
        persist: true
        install:
          - mas: "6444602274"
        configure:
          - run: defaults write com.tapbots.Ivory fontSize 16
        checklist:
          - Sign into personal a2mi.social Mastodon account
          - Restore purchases
          - Enable notifications
          - Notification settings (system level) Disable banners & sounds; previews only when unlocked
          - Sign into Instapaper

      - artifact: /Applications/Mona.app
        persist: true
        install:
          - mas: "1659154653"
        checklist:
          - Sign into personal a2mi.social Mastodon account
          - Restore purchases
          - Disallow notifications (for now)

      - artifact: /Applications/Messenger.app
        persist: true
        install:
          - cask: messenger
        checklist:
          - Sign into Facebook account

  # Games and entertainment (optional)
  - group: Games
    software:
      - artifact: "/Applications/Black Ink.app"
        persist: true
        install:
          - archive: https://redsweater.com/blackink/BlackInkLatest.zip
            file: "Black Ink.app"
        configure:
          - run: defaults write com.red-sweater.blackink2 SkipToNext -bool false
        checklist:
          - License
          - Enable software updates

      - artifact: /Applications/Steam.app
        persist: true
        install:
          - cask: steam
        checklist:
          - Launch & sign in
          - Remove login item in System Preferences/Users & Groups
          - Disable & unload com.valvesoftware.steamclean launchd job

      - artifact: $BREW/bin/nsnake
        persist: true
        install:
          - brew: nsnake

      - artifact: /Applications/Mini Metro.app
        persist: true
        install:
          - mas: "1047760200"

      - artifact: /Applications/SimCity 4 Deluxe Edition.app
        persist: true
        install:
          - mas: "804079949"

  # System utilities and tools (optional)
  - group: Utilities
    software:
      - artifact: $HOME/opt/bin/notify-me
        install:
          - script: install/notify-me.sh

      - artifact: $HOME/Applications/Ntfy.app
        checklist:
          - "Create Safari web app (`https://ntfy.cdzombak.net`)"
          - Sign in

      - artifact: /Applications/BetterDisplay.app
        persist: true
        install:
          - cask: betterdisplay
        checklist:
          - License
          - Configure as desired

      - artifact: /Applications/Hand Mirror.app
        persist: true
        install:
          - mas: "1502839586"
        configure:
          - run: defaults write "net.rafaelconde.Hand-Mirror" "selectedUIIcon" "Menu_Aperture"
          - run: defaults write "net.rafaelconde.Hand-Mirror" "selectedPopoverSize" 'Medium'
          - run: defaults write "net.rafaelconde.Hand-Mirror" "dismissPreference" '1'
          - run: defaults write "net.rafaelconde.Hand-Mirror" "smartWindowPreference" '0'
          - run: defaults write "net.rafaelconde.Hand-Mirror" "windowMaskPreference" '0'
          - run: defaults write "net.rafaelconde.Hand-Mirror" "selectedMirroringPreference" '1'
        checklist:
          - Set shortcut Ctrl-Shift-Cmd-M
          - Set open at login as desired
          - Select correct webcam
          - Position in menu bar
          - Restore purchase

      - artifact: /Applications/VNC Viewer.app
        persist: true
        install:
          - cask: vnc-viewer

      - artifact: /Applications/Screens 5.app
        persist: true
        install:
          - mas: "1663047912"
        checklist:
          - Sign into Tailscale
          - Sidebar hide Screens Connect
          - Controls Use shared clipboard by default
          - Privacy Lock Screens after 2 minutes
          - Restore purchases

      - artifact: /Applications/Transmit.app
        persist: true
        install:
          - cask: transmit
        checklist:
          - License
          - Sign into Panic Sync (Transmit and Nova repository)
          - Configure application

      - artifact: "/Applications/Discovery.app"
        persist: true
        install:
          - mas: "1381004916"

      - artifact: "/Applications/WiFi Explorer.app"
        persist: true
        install:
          - mas: "494803304"

      - artifact: "/Applications/Port Map.app"
        install:
          - script: install/portmap.sh

      - artifact: "/Applications/LogiTune.app"
        install:
          - script: install/logitune.sh
        checklist:
          - Disable meeting notifications/calendar integration
          - Configure webcam as desired

      - artifact: /Applications/Elgato Stream Deck.app
        install:
          - cask: elgato-stream-deck
        checklist:
          - Enable Accessibility permissions
          - "Install plugins: [Cosmetic Key](https://marketplace.elgato.com/product/cosmetic-key-077407b5-299b-479c-a921-6a3ffec677da), [MuteDeck](https://marketplace.elgato.com/product/mutedeck-5d494067-d9fa-4798-b40e-aca3b09f50a2) or [Zoom](https://marketplace.elgato.com/product/zoom-plugin-a588eabf-fced-401b-a7e3-c12e81bbf75c), [API Request](https://marketplace.elgato.com/product/api-request-dc7f3a02-e32c-4daf-b5a9-48c618deb6d1)"
          - "Install icons: [Material](https://marketplace.elgato.com/product/material-1c32abe8-341b-4cba-8e2b-186d6ed96070), [Mana](https://marketplace.elgato.com/product/mana-icons-f69dadd1-fd29-463f-b49d-8af9f7567fb6), [Pure](https://marketplace.elgato.com/product/pure-a994a0a5-049c-4382-b73f-417553e1d8bb), [Entype](https://marketplace.elgato.com/product/entypo-854efe00-6c8c-4532-854f-d5a2b3e3acae), [Hexaza](https://marketplace.elgato.com/product/hexaza-3d4ed1dc-bf33-4f30-9ecd-201769f10c0d)"
          - Restore config backup/saved profiles as desired
          - Configure as desired
          - Set keyboard shortcut for DnD in Shortcuts app
          - Verify MuteDeck is installed and configured
