checklist: $HOME/SystemSetup.md

install_groups:
  - group: Core
    optional: false
    software:

      - artifact: $BREW/bin/git
        install:
          - brew: git
        checklist:
          - Configure your Git user name and email
          - Set up SSH keys for GitHub/GitLab

      - artifact: $BREW/bin/go
        install:
          - brew: go
        checklist:
          - Set GOPRIVATE as needed via go env -w GOPRIVATE=host.com/org

      - artifact: $BREW/bin/node
        install:
          - brew: node

      - artifact: $BREW/bin/python3
        install:
          - brew: python

      - artifact: $BREW/bin/asdf
        install:
          - brew: asdf

      - artifact: $HOME/.asdf/plugins/python
        install:
          - run: $BREW/bin/asdf plugin add python

      # TODO(cdzombak): sync w/tool-versions
      - artifact: $HOME/.asdf/installs/python/3.13.2
        install:
          - run: $BREW/bin/asdf install python 3.13.2

      - artifact: $HOME/.asdf/plugins/nodejs
        install:
          - run: $BREW/bin/asdf plugin add nodejs

      # TODO(cdzombak): sync w/tool-versions
      - artifact: $HOME/.asdf/installs/nodejs/24.1.0
        install:
          - run: $BREW/bin/asdf install nodejs 24.1.0

      - artifact: $HOME/.local/bin/uv
        install:
          - run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - artifact: $BREW/bin/ag
        install:
          - brew: ag

      - artifact: $BREW/etc/bash_completion
        install:
          - brew: bash-completion

      - artifact: $BREW/bin/b2
        install:
          - brew: b2-tools

      - artifact: $BREW/bin/bandwhich
        install:
          - brew: bandwhich

      - artifact: $BREW/bin/bluetoothconnector
        install:
          - brew: bluetoothconnector

      - artifact: $BREW/bin/cidrtool
        install:
          - brew: cdzombak/oss/cidrtool

      - artifact: $BREW/opt/coreutils/libexec/gnubin
        install:
          - brew: coreutils

      - artifact: $BREW/bin/ggrep
        install:
          - brew: grep

      - artifact: $BREW/opt/curl/bin/curl
        install:
          - brew: curl

      - artifact: $BREW/bin/diff-so-fancy
        install:
          - brew: diff-so-fancy

      - artifact: $BREW/bin/ddgr
        install:
          - brew: ddgr

      - artifact: $BREW/bin/duf
        install:
          - brew: duf

      - artifact: $BREW/bin/dust
        install:
          - brew: dust

      - artifact: $BREW/bin/duti
        install:
          - brew: duti

      - artifact: $BREW/bin/fileicon
        install:
          - brew: fileicon

      - artifact: $BREW/bin/fzf
        install:
          - brew: fzf

      - artifact: $BREW/bin/gron
        install:
          - brew: gron

      - artifact: $BREW/bin/git-lfs
        install:
          - brew: git-lfs
        configure:
          - run: sudo git lfs install --system --skip-repo

      - artifact: $BREW/bin/gtar
        install:
          - brew: gnu-tar

      - artifact: $BREW/bin/htop
        install:
          - brew: htop

      - artifact: $BREW/bin/imagesnap
        install:
          - brew: imagesnap

      - artifact: $BREW/bin/jsonnet-lint
        install:
          - brew: go-jsonnet

      - artifact: $BREW/bin/jq
        install:
          - brew: jq

      - artifact: $BREW/bin/listening
        install:
          - brew: cdzombak/oss/listening

      - artifact: $BREW/bin/lua
        install:
          - brew: lua

      - artifact: $BREW/bin/mdcat
        install:
          - brew: mdcat

      - artifact: $BREW/bin/mdless
        install:
          - brew: mdless

      - artifact: $BREW/bin/mogrify
        install:
          - brew: imagemagick

      - artifact: $BREW/bin/nano
        install:
          - brew: nano

      - artifact: $BREW/bin/ncdu
        install:
          - brew: ncdu

      - artifact: $BREW/bin/nnn
        install:
          - brew: nnn

      - artifact: $BREW/bin/ocr
        install:
          - brew: schappim/ocr/ocr

      - artifact: $BREW/bin/parallel
        install:
          - brew: parallel
        configure:
          - run: mkdir -p "$HOME/.parallel" && touch "$HOME/.parallel/will-cite"

      - artifact: $BREW/bin/pdate
        install:
          - brew: cdzombak/oss/pdate

      - artifact: $BREW/bin/pdffonts
        install:
          - brew: poppler

      - artifact: $BREW/bin/pngcrush
        install:
          - brew: pngcrush

      - artifact: $BREW/bin/prettierd
        install:
          - brew: fsouza/prettierd/prettierd

      - artifact: $BREW/bin/pup
        install:
          - brew: pup

      - artifact: /Applications/QuickLook Video.app
        install:
          - cask: qlvideo

      - artifact: $BREW/bin/rdfind
        install:
          - brew: rdfind

      - artifact: $BREW/bin/screen
        install:
          - brew: screen

      - artifact: $BREW/bin/shellcheck
        install:
          - brew: shellcheck

      - artifact: $BREW/bin/shfmt
        install:
          - brew: shfmt

      - artifact: $BREW/opt/sqlite/bin/sqlite3
        install:
          - brew: sqlite

      - artifact: $BREW/bin/stow
        install:
          - brew: stow

      - artifact: $BREW/bin/syncthing
        install:
          - brew: syncthing
        configure:
          - run: brew services start syncthing
        checklist:
          - Configure Syncthing via web interface at http://localhost:8384

      - artifact: $BREW/bin/task
        install:
          - brew: go-task/tap/go-task

      - artifact: $BREW/bin/terminal-notifier
        install:
          - brew: terminal-notifier

      - artifact: $BREW/bin/tig
        install:
          - brew: tig

      - artifact: $BREW/bin/todos
        install:
          - brew: tofrodos

      - artifact: $BREW/bin/tree
        install:
          - brew: tree

      - artifact: $BREW/bin/trash
        install:
          - brew: trash

      - artifact: $BREW/bin/unshorten
        install:
          - brew: cdzombak/oss/unshorten

      - artifact: $BREW/bin/wget
        install:
          - brew: wget

      - artifact: $BREW/bin/windowstack2
        install:
          - brew: cdzombak/oss/windowstack2

      - artifact: $BREW/bin/xz
        install:
          - brew: xz

      - artifact: $BREW/bin/yamllint
        install:
          - brew: yamllint

      - artifact: $BREW/bin/yq
        install:
          - brew: python-yq

      - artifact: $BREW/bin/markdown-toc
        install:
          - npm: markdown-toc

      - artifact: $BREW/bin/nativefier
        install:
          - npm: nativefier

      - artifact: $BREW/bin/bundler
        install:
          - gem: bundler

      - artifact: $BREW/bin/fpm
        install:
          - gem: fpm

      - artifact: $BREW/bin/rubocop
        install:
          - gem: rubocop

      - artifact: $BREW/bin/plistwatch
        install:
          - run: brew gomod github.com/catilac/plistwatch

      - artifact: $BREW/bin/tldr
        install:
          - brew: tealdeer
        configure:
          - run: tldr --update

      - artifact: $BREW/bin/mdless
        install:
          - gem: mdless

      - artifact: $BREW/bin/envsubst
        install:
          - brew: gettext
        configure:
          - run: brew link --force gettext

      - artifact: /usr/local/bin/metar
        install:
          - script: install/metar.sh

      - artifact: $BREW/bin/mac-cleanup
        install:
          - run: brew tap mac-cleanup/mac-cleanup-py ; brew install mac-cleanup-py

      - artifact: /Applications/iTermAI.app
        install:
          - cask: itermai

      - artifact: /Applications/Sublime Text.app
        install:
          - cask: sublime-text
        checklist:
          - Install Package Control
          - Enter license key
          - Configure sync settings

      - artifact: /Applications/Suspicious Package.app
        install:
          - cask: suspicious-package

      - artifact: /Applications/WhatsYourSign.app
        install:
          - cask: whatsyoursign

      - artifact: /Applications/Marked 2.app
        install:
          - cask: marked

      - artifact: /Applications/KeyCastr.app
        install:
          - cask: keycastr
        configure:
          - run: defaults write "io.github.keycastr" "default.fontSize" '"61.50496794871795"'
          - run: defaults write "io.github.keycastr" "default.commandKeysOnly" '1'
          - run: defaults write "io.github.keycastr" "selectedVisualizer" 'Default'
          - run: defaults write "io.github.keycastr" "default.fadeDelay" '"1.646634615384615"'

      - artifact: /Applications/Setapp.app
        install:
          - cask: setapp

      - artifact: /Applications/ThingsMacSandboxHelper.app
        install:
          - cask: thingsmacsandboxhelper

      # TODO(cdzombak):
      - artifact: $HOME/Library/Fonts/MesloLGL-Regular.ttf
        install:
          - run: wget -O /tmp/Meslo.zip https://dropbox.dzombak.com/_auth/Meslo.zip && unzip /tmp/Meslo.zip -d /tmp/meslo && cp /tmp/meslo/*.ttf "$HOME/Library/Fonts/" && rm -rf /tmp/Meslo.zip /tmp/meslo
        checklist:
          - Verify fonts appear in Font Book

      # TODO(cdzombak):
      - artifact: $HOME/Library/Fonts/MesloLGLDZ-Regular.ttf
        install:
          - run: wget -O /tmp/MesloDZ.zip https://dropbox.dzombak.com/_auth/MesloDZ.zip && unzip /tmp/MesloDZ.zip -d /tmp/meslodz && cp /tmp/meslodz/*.ttf "$HOME/Library/Fonts/" && rm -rf /tmp/MesloDZ.zip /tmp/meslodz
        checklist:
          - Verify fonts appear in Font Book

      # TODO(cdzombak):
      - artifact: /usr/local/bin/hosts-timer
        install:
          - run: git clone https://github.com/cdzombak/hosts-timer.git /tmp/hosts-timer && cd /tmp/hosts-timer && make install && rm -rf /tmp/hosts-timer
        checklist:
          - Configure sudoers for passwordless operation

      - artifact: "$HOME/Library/Dictionaries/Websterâ€™s 1913.dictionary"
        install:
          - archive: https://dropbox.dzombak.com/websters-1913/Webster.s.1913.dictionary.zip
            file: "Websterâ€™s 1913.dictionary"
        checklist:
          - Verify dictionary appears in Dictionary.app

      # TODO(cdzombak):
      - artifact: /Applications/Ears.app
        install:
          - run: wget -O /tmp/Ears.zip https://retina.studio/ears/download && unzip /tmp/Ears.zip -d /tmp/ears && cp -r /tmp/ears/Ears.app /Applications/ && rm -rf /tmp/Ears.zip /tmp/ears
        checklist:
          - Enter license key

      - artifact: $HOME/Library/Sounds/Honk.aiff
        install:
          - dl: https://dropbox.dzombak.com/Honk.aiff

      # TODO(cdzombak):
      - artifact: /usr/local/bin/diskspace
        install:
          - run: wget -O /tmp/diskspace.tar.gz $(curl -s https://api.github.com/repos/scriptingosx/diskspace/releases/latest | grep 'browser_download_url.*tar.gz' | cut -d '"' -f 4) && tar -xzf /tmp/diskspace.tar.gz -C /tmp && cp /tmp/diskspace/diskspace /usr/local/bin/ && rm -rf /tmp/diskspace.tar.gz /tmp/diskspace

      - artifact: /Applications/Red Eye.app
        install:
          - run: echo "Manual install required from iCloud Drive/Software"
        checklist:
          - Install Red Eye.app from iCloud Drive/Software folder

      - artifact: /Applications/1Password.app
        install:
          - cask: 1password
        checklist:
          - Sign in to your 1Password account
          - Configure Touch ID/Face ID unlock
          - Install browser extensions
          - Set up SSH key management
          - Configure CLI tool integration

      - artifact: $BREW/bin/op
        install:
          - cask: 1password-cli

      - artifact: /Applications/Alfred 5.app
        install:
          - cask: alfred
        checklist:
          - Enable Alfred accessibility permissions
          - Configure hotkey (Cmd+Space)
          - Set up Powerpack license
          - Configure sync preferences

      - artifact: /Applications/AppCleaner.app
        install:
          - cask: appcleaner
        configure:
          - run: defaults write net.freemacsoft.AppCleaner SUEnableAutomaticChecks -bool true
        checklist:
          - Enable SmartDelete feature

      - artifact: /Applications/Arq.app
        install:
          - cask: arq
        checklist:
          - Configure backup sources and destinations
          - Set up encryption password
          - Schedule backup frequency

      - artifact: /Applications/Choosy.app
        install:
          - cask: choosy
        configure:
          - run: defaults write com.choosyosx.Choosy generalMode 0
          - run: defaults write com.choosyosx.Choosy launchAtLogin -bool true
          - run: defaults write com.choosyosx.Choosy runningMode 3
          - run: defaults write com.choosyosx.Choosy displayBrowserNames 0
        checklist:
          - Enter license key
          - Configure browser selection preferences
          - Set up URL patterns

      - artifact: /Applications/CommandQ.app
        install:
          - cask: commandq
        configure:
          - run: defaults write com.commandqapp.CommandQ delay -float 1.805555555555556
          - run: defaults write com.commandqapp.CommandQ launchOnBoot -bool true
        checklist:
          - Enter license key

      - artifact: /Applications/FastScripts.app
        install:
          - cask: fastscripts
        configure:
          - run: defaults write com.red-sweater.fastscripts3 ShellScriptEditorIdentifier "com.sublimetext.4"
          - run: defaults write com.red-sweater.fastscripts3 ScriptKeyboardShortcuts -data "e2925be062706c6973743030d4010203040506070000000000000a97"
        checklist:
          - Enter license key
          - Configure script folders

      - artifact: /Applications/GPG Keychain.app
        install:
          - cask: gpg-suite-no-mail
        checklist:
          - Import existing GPG keys
          - Configure key preferences
          - Set up Git signing

      - artifact: /Applications/Hammerspoon.app
        install:
          - cask: hammerspoon
        checklist:
          - Enable accessibility permissions
          - Configure launch at login
          - Set up configuration files

      - artifact: /Applications/Hex Fiend.app
        install:
          - cask: hex-fiend
        configure:
          - run: defaults write com.ridiculousfish.HexFiend DefaultEditMode 2

      - artifact: /Applications/Ice.app
        install:
          - brew: jordanbaird-ice
        checklist:
          - Grant necessary permissions
          - Configure menu bar organization
          - Enable launch at login

      - artifact: /Applications/IINA.app
        install:
          - cask: iina

      - artifact: /Applications/iTerm.app
        install:
          - cask: iterm2
        checklist:
          - Enable accessibility permissions
          - Configure sync settings
          - Set up color schemes and fonts

      - artifact: /Applications/Kaleidoscope.app
        install:
          - cask: kaleidoscope
        checklist:
          - Enter license key
          - Configure as diff tool for Git
          - Set up integration with development tools

      - artifact: /Applications/Latest.app
        install:
          - cask: latest

      - artifact: /Applications/LaunchControl.app
        install:
          - cask: launchcontrol
        configure:
          - run: defaults write "com.soma-zone.LaunchControl" "restoreSessionUponStart" '1'
          - run: defaults write "com.soma-zone.LaunchControl" "changeLabelWhenRename" '1'
          - run: defaults write "com.soma-zone.LaunchControl" "fileEditor" '"/Applications/Sublime Text.app"'
        checklist:
          - Enter license key
          - Grant full disk access

      - artifact: /Applications/LICEcap.app
        install:
          - cask: licecap

      - artifact: /Applications/noTunes.app
        install:
          - cask: notunes
        checklist:
          - Configure launch at login
          - Set up menu bar preferences

      - artifact: /Applications/OmniDiskSweeper.app
        install:
          - cask: omnidisksweeper
        checklist:
          - Grant full disk access permissions

      - artifact: /Applications/Raindrop.io.app
        install:
          - cask: raindropio
        checklist:
          - Sign in to your account
          - Install browser extensions
          - Configure sync settings

      - artifact: /Applications/Shortcat.app
        install:
          - cask: shortcat
        checklist:
          - Enable accessibility permissions
          - Configure activation shortcuts

      - artifact: /Applications/Sloth.app
        install:
          - cask: sloth

      - artifact: /Applications/Spotify.app
        install:
          - cask: spotify
        checklist:
          - Sign in to your account
          - Disable startup launch if desired
          - Configure music quality preferences

      - artifact: /Applications/Tailscale.app
        install:
          - cask: tailscale
        checklist:
          - Sign in to your Tailscale account
          - Configure device settings
          - Set up SSH and file sharing

      - artifact: /Applications/The Unarchiver.app
        install:
          - cask: the-unarchiver

      - artifact: /Applications/Typora.app
        install:
          - cask: typora
        configure:
          - run: defaults write abnerworks.Typora "auto_expand_block" 0
          - run: defaults write abnerworks.Typora "copy_markdown_by_default" 1
          - run: defaults write abnerworks.Typora "enable_inline_math" 1
          - run: defaults write abnerworks.Typora prettyIndent 0
          - run: defaults write abnerworks.Typora quitAfterWindowClose 1
          - run: defaults write abnerworks.Typora "strict_mode" 1
          - run: defaults write abnerworks.Typora theme "Github"
          - run: defaults write abnerworks.Typora "use_seamless_window" 1
        checklist:
          - Configure file associations
          - Enter license key

      - artifact: $HOME/Library/Screen Savers/Aerial.saver
        install:
          - cask: aerial
        checklist:
          - Configure in System Preferences
          - Set up video preferences

      - artifact: $HOME/Library/Screen Savers/Brooklyn.saver
        install:
          - cask: brooklyn
        checklist:
          - Configure in System Preferences
          - Set up display preferences

      - artifact: $HOME/Library/Fonts/JetBrainsMono-Regular.ttf
        install:
          - cask: font-jetbrains-mono
        checklist:
          - Configure terminal font
          - Update editor font settings

      - artifact: $HOME/Library/Fonts/NationalPark-Regular.otf
        install:
          - cask: font-national-park

      - artifact: /Applications/1Password for Safari.app
        install:
          - mas: "1569813296"
        checklist:
          - Enable Safari extension
          - Configure extension settings

      - artifact: /Applications/Bear.app
        install:
          - mas: "1091189122"
        configure:
          - run: defaults write net.shinyfrog.bear SFAppIconMatchesTheme -bool true
          - run: defaults write net.shinyfrog.bear SFEditorFontSize 17
          - run: defaults write net.shinyfrog.bear SFEditorLineWidthMultiplier 50
          - run: 'defaults write net.shinyfrog.bear NSUserKeyEquivalents ''{ Archive = "^$a"; Back = "@^\U2190"; Forward = "@^\U2192"; }'''
        checklist:
          - Sign in to sync account
          - Configure keyboard shortcuts
          - Install Safari extension

      - artifact: /Applications/Dropover.app
        install:
          - mas: "1355679052"
        checklist:
          - Configure launch at login
          - Restore purchase if needed

      - artifact: /Applications/Due.app
        install:
          - mas: "524373870"
        configure:
          - run: defaults write com.phocusllp.duemac prefIntDefaultSnoozeInterval -int 600
          - run: defaults write com.phocusllp.duemac prefIntApplicationRunningMode -int 1
          - run: defaults write com.phocusllp.duemac prefIntDefaultContentSizeCategory -int 0
          - run: defaults write com.phocusllp.duemac prefIntWeekStarts -int 1
          - run: defaults write com.phocusllp.duemac prefStringDue2ThemeName -string "Change with System"
          - run: defaults write com.phocusllp.duemac prefStringLastAutoDarkThemeName -string "Obsidian"
          - run: defaults write com.phocusllp.duemac prefStringLastAutoLightThemeName -string "Calcite"
        checklist:
          - Configure keyboard shortcuts
          - Enable launch at login
          - Set up sync preferences

      - artifact: /Applications/Instapaper Save.app
        install:
          - mas: "1481302432"
        checklist:
          - Sign in to Instapaper account
          - Install browser extensions

      - artifact: /Applications/NewFileMenu.app
        install:
          - mas: "1064959555"
        checklist:
          - Configure file templates
          - Set up keyboard shortcuts

      - artifact: /Applications/Numbers.app
        install:
          - mas: "409203825"

      - artifact: /Applications/Pages.app
        install:
          - mas: "409201541"

      - artifact: /Applications/Keynote.app
        install:
          - mas: "409183694"

      - artifact: /Applications/Paint S.app
        install:
          - mas: "736473980"
        checklist:
          - Restore purchases if needed

      - artifact: /Applications/TableFlip.app
        install:
          - cask: tableflip

      - artifact: /Applications/Pastebot.app
        install:
          - mas: "1179623856"
        configure:
          - run: defaults write com.tapbots.Pastebot2Mac AlwaysPastePlainText -bool true
          - run: defaults write com.tapbots.Pastebot2Mac SoundsEnabled -bool false
          - run: defaults write com.tapbots.Pastebot2Mac UIVisibilityState 2
          - run: defaults write com.tapbots.Pastebot2Mac "StartSequentialPasteHotKeyCleared" '1'
          - run: defaults write com.tapbots.Pastebot2Mac "PasteAndDequeueHotKeyCleared" '1'
          - run: defaults write com.tapbots.Pastebot2Mac "MaxNumberClipboardEntries" '500'
        checklist:
          - Configure launch at login
          - Set up keyboard shortcuts
          - Enable accessibility permissions

      - artifact: /Applications/PCalc.app
        install:
          - mas: "403504866"

      - artifact: /Applications/PDF Viewer.app
        install:
          - mas: "1120099014"

      - artifact: /Applications/Peek.app
        install:
          - mas: "1554235898"
        checklist:
          - Enable accessibility permissions
          - Configure font preferences

      - artifact: /Applications/Poolsuite FM.app
        install:
          - mas: "1514817810"
        checklist:
          - Sign in to your account

      - artifact: /Applications/RadarScope.app
        install:
          - mas: "288419283"
        configure:
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.isAllisonHouseEnabled" -bool false
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.isWeatherOpsEnabled" -bool false
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.metFeatureSetState" -int 2
          - run: defaults write com.basevelocity.RadarScope "FeatureManager.proFeatureSetState" -int 2
          - run: defaults write com.basevelocity.RadarScope dataProvider -string "wdt"
          - run: defaults write com.basevelocity.RadarScope fontScale -string "1.6"
          - run: defaults write com.basevelocity.RadarScope isSidebarCollasped -bool false
          - run: defaults write com.basevelocity.RadarScope lightningProvider -string "wdtp"
          - run: defaults write com.basevelocity.RadarScope premiumProductsProvider -string "wdtp"
          - run: defaults write com.basevelocity.RadarScope showCities -bool false
          - run: defaults write com.basevelocity.RadarScope showDiscussions -bool true
          - run: defaults write com.basevelocity.RadarScope showLightning -bool true
          - run: defaults write com.basevelocity.RadarScope showResearchRadars -bool true
          - run: defaults write com.basevelocity.RadarScope showSpotterReports -bool true
          - run: defaults write com.basevelocity.RadarScope showStormReports -bool true
          - run: defaults write com.basevelocity.RadarScope showStormTracks -bool true
          - run: defaults write com.basevelocity.RadarScope showTDWRs -bool true
          - run: defaults write com.basevelocity.RadarScope showWatches -bool true
          - run: defaults write com.basevelocity.RadarScope warningProvider -string "wdt"
        checklist:
          - Restore purchases
          - Configure data providers
          - Set up location preferences

      - artifact: /Applications/Reeder.app
        install:
          - mas: "1529448980"
        configure:
          - run: defaults write com.reederapp.5.macOS "app.appearance" 10
          - run: defaults write com.reederapp.5.macOS "app.appearance.opaque" '1'
          - run: defaults write com.reederapp.5.macOS "app.content-size-category" '3'
          - run: defaults write com.reederapp.5.macOS "app.default-browser" -string "com.apple.Safari"
          - run: defaults write com.reederapp.5.macOS "app.filter" 2
          - run: defaults write com.reederapp.5.macOS "app.grayscale-favicons" -bool true
          - run: defaults write com.reederapp.5.macOS "app.icon-badge" 0
          - run: defaults write com.reederapp.5.macOS "app.layout" 3
          - run: defaults write com.reederapp.5.macOS "app.state.controller" -string "streams"
          - run: defaults write com.reederapp.5.macOS "app.state.stream.type" 0
          - run: defaults write com.reederapp.5.macOS "app.state.stream.user" -string "Feedbin/chris@chrisdzombak.net"
          - run: defaults write com.reederapp.5.macOS "app.state.user" -string "Feedbin/chris@chrisdzombak.net"
          - run: defaults write com.reederapp.5.macOS "article.font-size" 17
          - run: defaults write com.reederapp.5.macOS "article.increase-contrast" -bool true
          - run: defaults write com.reederapp.5.macOS "article.max.width" '40'
          - run: defaults write com.reederapp.5.macOS "bionic.toolbar" -bool false
          - run: defaults write com.reederapp.5.macOS "browser.open-links-in-background" -bool true
          - run: defaults write com.reederapp.5.macOS "browser.open-links-in-default-browser" -bool true
          - run: defaults write com.reederapp.5.macOS "corekit.animator.configuration" 2
          - run: defaults write com.reederapp.5.macOS "subscriptions-hide-allitems-count" -bool false
        checklist:
          - Configure Feedbin account
          - Set up reading preferences
          - Configure keyboard shortcuts

      - artifact: /Applications/Service Station.app
        install:
          - mas: "1503136033"
        checklist:
          - Configure sync preferences
          - Grant necessary permissions

      - artifact: /Applications/Shareful.app
        install:
          - mas: "1522267256"
        checklist:
          - Enable system extensions
          - Configure sharing preferences

      - artifact: /Applications/Soro.app
        install:
          - mas: "1550457805"

      - artifact: /Applications/Spaced.app
        install:
          - mas: "1666327168"

      - artifact: /Applications/Tot.app
        install:
          - mas: "1491071483"
        checklist:
          - Configure launch at login
          - Set up keyboard shortcuts
          - Configure dock preferences

      - artifact: /Applications/Things3.app
        install:
          - mas: "904280696"
        configure:
          - run: 'defaults write com.culturedcode.ThingsMac NSUserKeyEquivalents ''{ "New Repeating To-Do" = "@$r"; }'''
          - run: defaults write com.culturedcode.ThingsMac CCDockCountType 1
          - run: defaults write com.culturedcode.ThingsMac UriSchemeEnabled -bool true
        checklist:
          - Configure cloud sync
          - Set up keyboard shortcuts
          - Configure widgets and extensions

      # Safari Extensions
      - artifact: /Applications/RSS Button for Safari.app
        install:
          - mas: "1437501942"
        checklist:
          - Enable Safari extension

      - artifact: /Applications/Save to Raindrop.io.app
        install:
          - mas: "1549370672"
        checklist:
          - Enable Safari extension
          - Sign in to Raindrop.io account

      - artifact: /Applications/StopTheNews.app
        install:
          - mas: "1564780131"
        checklist:
          - Enable Safari extension
          - Configure filtering preferences

      - artifact: /Applications/Tabs to Links.app
        install:
          - mas: "1451408472"
        checklist:
          - Enable Safari extension

      - artifact: /Applications/Wayback Machine.app
        install:
          - mas: "1472422"
        checklist:
          - Enable Safari extension

      - artifact: /Applications/Wipr.app
        install:
          - mas: "1320666476"
        checklist:
          - Enable Safari extension
          - Configure blocking preferences

  - group: Personal
    software:
      - artifact: /Applications/Day One.app
        persist: true
        install:
          - mas: "1044867090"
        checklist:
          - Sign into Day One account
          - Disable global shortcut
          - Disable creating tags from hashtags
          - Disable daily prompt

  - group: Dev (always)
    optional: false
    software:
      - artifact: /Applications/Fork.app
        install:
          - cask: fork
        checklist:
          - Sign in to GitHub account
          - Configure Git settings
          - Set default source folder

      - artifact: $BREW/bin/cloc
        install:
          - brew: cloc

      - artifact: $BREW/bin/hexyl
        install:
          - brew: hexyl

      - artifact: $BREW/bin/entr
        install:
          - brew: entr

      - artifact: $BREW/bin/fswatch
        install:
          - brew: fswatch

      - artifact: $BREW/bin/watchexec
        install:
          - brew: watchexec

      - artifact: $BREW/bin/semver
        install:
          - npm: semver

      - artifact: $BREW/bin/watchman
        install:
          - brew: watchman

      - artifact: /Applications/JSON Editor.app
        install:
          - mas: "567740330"
        checklist:
          - Associate with JSON files

      - artifact: /Applications/Easy CSV Editor.app
        install:
          - mas: "1171346381"
        checklist:
          - Associate with CSV files

      - artifact: /Applications/PLIST Editor.app
        install:
          - mas: "1157491961"
        checklist:
          - Associate with PLIST files

      - artifact: $BREW/bin/httpie
        install:
          - brew: httpie

      - artifact: $BREW/bin/websocat
        install:
          - brew: websocat

      - artifact: $BREW/bin/golint
        install:
          - gomod: golang.org/x/lint/golint

      - artifact: $BREW/bin/goimports
        install:
          - gomod: golang.org/x/tools/cmd/goimports

      # TODO(cdzombak):
      - artifact: $BREW/bin/gorc
        install:
          - gomod: github.com/cdzombak/gorc

      - artifact: $BREW/bin/pkger
        install:
          - gomod: github.com/markbates/pkger/cmd/pkger

      - artifact: $BREW/bin/golangci-lint
        install:
          - brew: golangci-lint

      - artifact: $BREW/bin/ifacemaker
        install:
          - gomod: github.com/vburenin/ifacemaker

      - artifact: $BREW/bin/virtualenv
        install:
          - brew: virtualenv

      - artifact: $BREW/bin/black
        install:
          - brew: black

      - artifact: $BREW/bin/flake8
        install:
          - brew: flake8

      - artifact: $BREW/bin/mypy
        install:
          - brew: mypy

      - artifact: $BREW/bin/pylint
        install:
          - brew: pylint

      - artifact: $BREW/bin/ruff
        install:
          - brew: ruff

      - artifact: $BREW/bin/tsc
        install:
          - brew: typescript

      - artifact: $BREW/bin/prettier
        install:
          - brew: prettier

      - artifact: $BREW/bin/eslint
        install:
          - brew: eslint

      - artifact: $BREW/bin/act
        install:
          - brew: act

      - artifact: $BREW/bin/dive
        install:
          - brew: dive

      - artifact: $BREW/bin/dockerfilelint
        install:
          - npm: dockerfilelint

      - artifact: $BREW/bin/hadolint
        install:
          - brew: hadolint

      - artifact: $BREW/bin/ffmpeg
        install:
          - brew: ffmpeg

  # Development tools (optional)
  - group: Dev
    software:
      - artifact: /Applications/Expressions.app
        persist: true
        install:
          - mas: "913158085"

      - artifact: /Applications/Sublime Merge.app
        persist: true
        install:
          - cask: sublime-merge
        checklist:
          - Enter license key
          - Configure Git settings

      - artifact: /Applications/TextBuddy.app
        persist: true
        install:
          - mas: "1487928210"
        checklist:
          - Configure preferences

      - artifact: /Applications/Boop.app
        persist: true
        install:
          - mas: "1518425043"

      - artifact: /Applications/Visual Studio Code.app
        persist: true
        install:
          - cask: visual-studio-code
        checklist:
          - Sync settings using Github account

      - artifact: /Applications/JetBrains Toolbox.app
        persist: true
        install:
          - cask: jetbrains-toolbox
        checklist:
          - Sign into JetBrains account
          - Enable automatic updates
          - Enable 'Generate Shell Scripts' to ~/opt/bin
          - Enable 'Run at Login'
          - Install IDEs as desired
          - Enable settings & plugin syncing

      - artifact: /Applications/Dash.app
        persist: true
        install:
          - cask: dash
        checklist:
          - Sync settings from ~/.config/macos
          - Sync snippets
          - Review & Arrange docsets as desired
          - License

      - artifact: /Applications/GitHub Desktop.app
        install:
          - cask: github
        checklist:
          - Sign in to GitHub account
          - Configure Git settings
          - Set up SSH keys

      - artifact: /Applications/WWDC.app
        persist: true
        install:
          - cask: wwdc-for-macos

      - artifact: /Applications/SF Symbols.app
        persist: true
        install:
          - cask: sf-symbols

      - artifact: /Applications/Redis Insight.app
        persist: true
        install:
          - cask: redis-insight

      - artifact: /Applications/RapidAPI.app
        persist: true
        install:
          - cask: rapidapi
        checklist:
          - Sign in / License
          - "Set font: Meslo LG L 14"

      - artifact: /Applications/HTTP Toolkit.app
        install:
          - cask: http-toolkit

      - artifact: /Applications/Script Debugger.app
        install:
          - cask: script-debugger

      - artifact: $BREW/bin/carthage
        persist: true
        install:
          - brew: carthage

      - artifact: $BREW/bin/react-native
        persist: true
        install:
          - npm: react-native-cli

      - artifact: $BREW/bin/sbt
        persist: true
        install:
          - brew: sbt

      - artifact: $BREW/bin/java
        persist: true
        install:
          - cask: temurin

      - artifact: $BREW/bin/mvn
        persist: true
        install:
          - brew: maven

      - artifact: $BREW/bin/gradle
        persist: true
        install:
          - brew: gradle

      - artifact: $BREW/bin/aws
        persist: true
        install:
          - brew: awscli

      - artifact: $BREW/bin/doctl
        persist: true
        install:
          - brew: doctl

      - artifact: $BREW/bin/gcloud
        persist: true
        install:
          - cask: google-cloud-sdk

      - artifact: /Applications/OrbStack.app
        persist: true
        install:
          - cask: orbstack
        configure:
          - run: mkdir -p "$HOME/opt/bin"
          - run: ln -sf "$HOME/.orbstack/ssh/config" "$HOME/.ssh/config_orbstack" || true
        checklist:
          - Start at login; show in menu bar
          - Automatically download updates
          - Set memory and CPU limits as desired

      # - artifact: /Applications/Docker.app
      #   install:
      #     - cask: docker
      #   configure:
      #     - run: mkdir -p "$HOME/opt/bin"
      #   checklist:
      #     - Disable application starting at login, as desired
      #     - Disable weekly tips
      #     - Enable Docker Compose V2, as desired

      - artifact: $BREW/bin/periodic-docker-pull
        install:
          - run: brew tap cdzombak/oss ; brew install periodic-docker-pull

      - artifact: /Applications/UTM.app
        persist: true
        install:
          - mas: "1538878817"

      - artifact: $BREW/bin/k9s
        persist: true
        install:
          - run: brew tap derailed/k9s ; brew install k9s

      - artifact: $BREW/bin/kail
        persist: true
        install:
          - run: brew tap boz/repo ; brew install kail

      - artifact: /Applications/Lens.app
        persist: true
        install:
          - cask: lens

      - artifact: /Applications/ServerCat.app
        persist: true
        install:
          - mas: "1501532023"
        checklist:
          - Add servers as desired

      - artifact: $BREW/bin/esphome
        persist: true
        install:
          - brew: esphome

      - artifact: /Applications/Arduino IDE.app
        persist: true
        install:
          - cask: arduino-ide

      - name: PlatformIO
        artifact: $BREW/bin/pio
        persist: true
        install:
          - brew: platformio

  # AI and machine learning tools (optional)
  - group: AI
    software: []

  # CAD, 3D Printing, Electronics & Radio tools (optional)
  - group: CAD, 3D Printing, Electronics & Radio
    software:
      - artifact: /Applications/BambuStudio.app
        persist: true
        install:
          - cask: bambu-studio

      - artifact: /Applications/UltiMaker Cura.app
        persist: true
        install:
          - cask: ultimaker-cura
        checklist:
          - Sign In
          - Install Mesh Tools extension
          - Restore settings etc. from most recent backup (Extensions > Cura Backups)

      - artifact: $HOME/Applications/Autodesk Fusion.app
        persist: true
        install:
          - cask: autodesk-fusion
        # configure:
        #   - run: rm -f "/Applications/Autodesk Fusion Installer.app"
        checklist:
          - Sign In

      - artifact: /Applications/OpenSCAD.app
        persist: true
        install:
          - cask: openscad

      - artifact: /Applications/Meshman 3D Viewer PRO.app
        persist: true
        install:
          - mas: "1469117334"

      - artifact: /Applications/LTspice.app
        persist: true
        install:
          - cask: ltspice

      - artifact: /Applications/KiCad.app
        persist: true
        install:
          - cask: kicad

      - artifact: /Applications/Qucs-S.app
        persist: true
        install:
          - run: brew tap ra1nb0w/qucs-s ; brew install --cask qucs-s

      - artifact: /Applications/CubicSDR.app
        persist: true
        install:
          - cask: cubicsdr

      - artifact: /Applications/CHIRP.app
        persist: true
        install:
          - cask: chirp

  # Office and productivity applications (optional)
  - group: Office
    software:
      - artifact: /Applications/Firefox.app
        install:
          - cask: firefox
        checklist:
          - Sign into Firefox Sync
          - Change device name
          - Sync uBlock settings from cloud storage
          - Customize toolbar
          - Remove default bookmarks
          - Disable Pocket (about:config and disable extensions.pocket.enabled)

      - artifact: /Applications/Google Drive.app
        persist: true
        install:
          - cask: google-drive
        checklist:
          - Authenticate

      - artifact: /Applications/Zotero.app
        install:
          - cask: zotero

      - artifact: /Applications/Clocker.app
        install:
          - mas: "1056643111"

      - artifact: /Applications/Diagrams.app
        install:
          - mas: "1276248849"

      - artifact: /Applications/draw.io.app
        install:
          - cask: drawio

      - artifact: /Applications/Monodraw.app
        install:
          - cask: monodraw
        checklist:
          - Register (link in 1Password)

      - artifact: /Applications/OmniGraffle.app
        install:
          - cask: omnigraffle
        checklist:
          - License

      - artifact: /Applications/OmniOutliner.app
        install:
          - cask: omnioutliner
        configure:
          - run: defaults write com.omnigroup.OmniOutliner5 OOReturnShouldCreateNewRow 0
          - run: defaults write com.omnigroup.OmniOutliner5 OOTabShouldNavigateCells 1
        checklist:
          - License
          - Link template folder in ~/.config/macos/OmniOutliner

      - artifact: /Applications/Deckset.app
        install:
          - cask: deckset

      - artifact: /Applications/PDFScanner.app
        install:
          - mas: "410968114"

      - artifact: /Applications/Calca.app
        install:
          - mas: "635758264"

      - artifact: /Applications/Parcel.app
        persist: true
        install:
          - mas: "639968404"
        checklist:
          - Add delivery tracking accounts

  # Communication applications (optional)
  - group: Communications
    software:
      - artifact: /Applications/Mimestream.app
        persist: true
        install:
          - cask: mimestream
        configure:
          - run: defaults write com.mimestream.Mimestream TextSizeAdjustment 2
          - run: defaults write com.mimestream.Mimestream HideBadgeForSpam 1
          - run: defaults write com.mimestream.Mimestream PlaySounds none
          - run: defaults write com.mimestream.Mimestream DeleteKeyAction 'trash'
          - run: 'defaults write com.mimestream.Mimestream NSUserKeyEquivalents ''{ "Add Star" = "@^s"; "Remove Star" = "@^s"; }'''
        checklist:
          - Add email accounts
          - Configure notification preferences
          - Set up keyboard shortcuts
          - Configure message handling preferences

      - artifact: /Applications/Discord.app
        persist: true
        install:
          - cask: discord
        checklist:
          - Sign in to Discord account

      - artifact: /Applications/Slack.app
        persist: true
        install:
          - cask: slack
        checklist:
          - Sign in to Slack accounts

      - artifact: /Applications/zoom.us.app
        persist: true
        install:
          - cask: zoom
        configure:
          - run: sudo rm -rf ~/.zoomus
        checklist:
          - Enable microphone mute when joining meeting
          - Disable video when joining meeting
          - Generally configure as desired

      - artifact: /Applications/Signal.app
        install:
          - cask: signal
        checklist:
          - Authenticate with phone

  # Multimedia, photography, and media tools (optional)
  - group: Multimedia & Photography
    software:
      - artifact: /Applications/Pixelmator Pro.app
        install:
          - mas: "1289583905"

      - artifact: /Applications/Acorn 7.app
        persist: true
        install:
          - mas: "1547371478"

      - artifact: /Applications/Affinity Photo 2.app
        persist: true
        install:
          - cask: affinity-photo

      - artifact: /Applications/RAW Power.app
        persist: true
        install:
          - mas: "1157116444"

      - artifact: /Applications/ColorSnapper2.app
        persist: true
        install:
          - mas: "969418666"

      - artifact: /Applications/Adobe Creative Cloud.app
        persist: true
        install:
          - cask: adobe-creative-cloud
        checklist:
          - Sign in to Adobe account
          - Install desired Creative Cloud apps

      - artifact: /Applications/Handbrake.app
        persist: true
        install:
          - cask: handbrake

      - artifact: $BREW/bin/yt-dlp
        persist: true
        install:
          - brew: yt-dlp

      - artifact: /Applications/Android File Transfer.app
        persist: true
        install:
          - cask: android-file-transfer

  # Home automation and smart home tools (optional)
  - group: Home
    software:
      - artifact: /Applications/Sonos.app
        persist: true
        install:
          - cask: sonos
        checklist:
          - Set up Sonos system

      - artifact: $HOME/Applications/UniFi Protect.app
        persist: true
        checklist:
          - Create Safari web app

      # TODO(cdzombak):

  # Music, podcasts, and reading applications (optional)
  - group: "Music, Movies, Podcasts & Reading"
    software:
      - artifact: /Applications/Plexamp.app
        install:
          - cask: plexamp
        checklist:
          - Sign in to Plex account

      - artifact: /Applications/Infuse 7.app
        persist: true
        install:
          - mas: "1136220934"
        checklist:
          - Configure media sources

      - artifact: /Applications/Pocket Casts.app
        persist: true
        install:
          - cask: pocket-casts
        checklist:
          - Sign in to Pocket Casts account

      - artifact: /Applications/YT Music.app
        persist: true
        install:
          - cask: yt-music

      - artifact: /Applications/Triode.app
        persist: true
        install:
          - mas: "1450027401"

      - artifact: /Applications/Kindle.app
        persist: true
        install:
          - mas: "405399194"
        checklist:
          - Sign in to Amazon account

      - artifact: /Applications/Calibre.app
        persist: true
        install:
          - cask: calibre

  # Social networking applications (optional)
  - group: Social Networking
    software:

      - artifact: /Applications/Ivory.app
        persist: true
        install:
          - mas: "6444602274"
        configure:
          - run: defaults write com.tapbots.Ivory fontSize 16
        checklist:
          - Sign in to Mastodon account

      - artifact: /Applications/Mona.app
        persist: true
        install:
          - mas: "1659154653"
        checklist:
          - Sign in to Mastodon account

      - artifact: /Applications/Messenger.app
        persist: true
        install:
          - cask: messenger
        checklist:
          - Sign in to Facebook account

  # Games and entertainment (optional)
  - group: Games
    software:
      - artifact: /Applications/Steam.app
        persist: true
        install:
          - cask: steam
        checklist:
          - Sign in to Steam account
          - Configure game library

      - artifact: $BREW/bin/nsnake
        persist: true
        install:
          - brew: nsnake

      - artifact: /Applications/Mini Metro.app
        persist: true
        install:
          - mas: "1047760200"

      - artifact: /Applications/SimCity 4 Deluxe Edition.app
        persist: true
        install:
          - mas: "804079949"

  # System utilities and tools (optional)
  - group: Utilities
    software:
      - artifact: /Applications/BetterDisplay.app
        persist: true
        install:
          - cask: betterdisplay
        checklist:
          - Configure display settings

      - artifact: /Applications/Hand Mirror.app
        persist: true
        install:
          - mas: "1502839586"
        configure:
          - run: defaults write "net.rafaelconde.Hand-Mirror" "selectedUIIcon" "Menu_Aperture"
          - run: defaults write "net.rafaelconde.Hand-Mirror" "selectedPopoverSize" 'Medium'
          - run: defaults write "net.rafaelconde.Hand-Mirror" "dismissPreference" '1'
        checklist:
          - Enable screen mirroring

      - artifact: /Applications/VNC Viewer.app
        persist: true
        install:
          - cask: vnc-viewer

      - artifact: /Applications/Screens 5.app
        persist: true
        install:
          - mas: "1663047912"
        checklist:
          - Configure remote connections

      - artifact: /Applications/Transmit 5.app
        persist: true
        install:
          - cask: transmit
        checklist:
          - Enter license key
          - Configure server connections
